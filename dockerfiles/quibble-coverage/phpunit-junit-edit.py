#!/usr/bin/env python3
"""
Edit MediaWiki's PHPUnit junit.xml file.
Copyright (C) 2019 Kosta Harlan <kharlan@wikimedia.org>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
"""

"""
More about this script. It is adapted from
gist.github.com/black-silence/35b958fe92c704de551a3ca4ea082b87

SonarQube currently has difficulty importing PHPUnit test coverage reports
generated by our test infrastructure. Without the modifications made by
this script, sonar-scanner will log "WARN: Test cases must always be
descendants of a file-based suite, skipping" and no test coverage will
be imported to SonarQube. With this script, the junit.xml will be modified
such that every test suite is associated with a file.

An alternative approach is to extend the Junit log class, as for example
Codeception has done (github.com/Codeception/phpunit-wrapper/pull/58/files)
"""

import argparse
import xml.etree.ElementTree as etree


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('junit', help='Path to junit.xml')
    args = parser.parse_args()
    tree = etree.parse(args.junit)
    root = tree.getroot()

    for mastersuites in root:
        for suite in mastersuites:
            if 'file' not in suite.attrib:
                continue
            filename = suite.attrib['file']
            for subsuite in suite:
                if subsuite.tag != 'testsuite':
                    continue
                if 'file' not in subsuite.attrib:
                    name = filename
                    for key, value in subsuite.attrib.items():
                        if (key == 'name'):
                            name = value
                    subsuite.attrib['file'] = name

    tree.write(args.junit)


if __name__ == '__main__':
    main()
