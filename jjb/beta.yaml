# Contains any jobs related to the beta cluster.
#
# Beta is a cluster meant to reproduce the production environnement out of
# virtual instances in the Wikimedia labs.  We use Jenkins job to maintain
# some recurring tasks such as running the MediaWiki database schema updates.
#
# Jobs should be prefixed with 'beta-' and tied to the 'deployment-bastion'
# host defined in Jenkins.  They will run as the `jenkins-deploy` user on that
# instance.  To create a new job simply use the provided default which would
# take care of the basic configuration.
#
# Example:
#
#  - job:
#    name: beta-myawesomeness
#    defaults: beta
#    <your stuff there>

# Basic valid defaults, making sure we run on the deployment-bastion host
# slave nodes which is in labs.
- defaults:
    name: beta
    description: |
      <p>Job is managed by <a href="https://www.mediawiki.org/wiki/CI/JJB">Jenkins Job Builder</a>.</p>
    project-type: freestyle

    wrappers:
      - timeout:
          timeout: 30
          fail: true
      - timestamps
      - ansicolor

# Job to recompile math texvc whenever the mediawiki/extensions/Math repository
# is updated.  The job makes sure the submodule is up-to-date before triggering
# the /usr/local/bin/scap-recompile script.
#
# Should be triggered on post merge.
#
- job-template:
    name: beta-recompile-math-texvc-{datacenter}
    defaults: beta
    node: deployment-bastion-{datacenter}

    triggers:
     - zuul

    builders:
     - shell: |
         echo "Making sure the Math extension is up to date"
         sudo -u mwdeploy -s /bin/bash -c '
            set -ex ;
            cd /srv/scap-stage-dir/php-master/extensions ;
            git submodule Math ;
            git submodule update --init Math ;
            git submodule Math ;
            '
         echo "Recompiling texvc as user 'mwdeploy'"
         sudo -u mwdeploy /bin/bash /usr/local/bin/scap-recompile


# Job to run MediaWiki update.php script on all the beta wikis.
#
# It is a matrix job which is a very nice feature in Jenkins to have a job run
# with different input parameters.  It is current drawback is that the list of
# databases is hardcoded in the Jenkins job (ie below) when it should really be
# generated out of the current list of database (which is all-labs.dblist in
# the repository operations/mediawiki-config.git). FIXME We should workaround
# this by having an integration test that would make sure boths repositories
# are in sync.
- job-template:
    name: beta-update-databases-{datacenter}
    defaults: beta
    node: deployment-bastion-{datacenter}

    project-type: matrix

    axes:
     - axis:
        type: label-expression
        name: label
        values:
         - deployment-bastion-{datacenter}
     - axis:
        type: user-defined
        name: wikidb
        values:
         - aawiki
         - arwiki
         - cawiki
         - commonswiki
         - deploymentwiki
         - dewiki
         - ee_prototypewiki
         - enwiki
         - en_rtlwiki
         - enwikibooks
         - enwikinews
         - enwikiquote
         - enwikisource
         - enwikiversity
         - enwiktionary
         - eowiki
         - eswiki
         - fawiki
         - hewiki
         - hiwiki
         - jawiki
         - kowiki
         - loginwiki
         - metawiki
         - ruwiki
         - simplewiki
         - sqwiki
         - testwiki
         - ukwiki
         - wikidatawiki
         - zhwiki

    # The 'wikidb' axis defined above is exported by Jenkins as an
    # environnement variable. Makes it trivial to run on all databases.
    builders:
     - shell: "sudo -u mwdeploy mwscript update.php --wiki=$wikidb --quick"

    publishers:
      - beta-irc

    # We do not have a good way to detect databases modifications, so just spam
    # the beta cluster with update requests.
    triggers:
     - timed: '@hourly'

    logrotate:
        daysToKeep: 15

# Job to deploy the Wikimedia MediaWiki configuration files
#
# The configuration files are hosted in operations/mediawiki-config.git which
# is deployed manually on the production cluster.  On beta, we cant really keep
# up with all the changes, so we deploy them on sight.
#
# We simply update the repository on the beta host and do a git reset hard.
#
- job-template:
    name: beta-mediawiki-config-update-{datacenter}
    defaults: beta
    node: deployment-bastion-{datacenter}

    # Do not run concurrently with the downstream job
    block-downstream: true

    triggers:
     - zuul

    builders:
     - shell: /usr/local/bin/wmf-beta-mwconfig-update

    logrotate:
        daysToKeep: 15

    publishers:
      - beta-irc
      - email-ext:
          recipients: qa-alerts@lists.wikimedia.org
          attach-build-log: true
          first-failure: true
          aborted: true
          failure: false
          fixed: true
      - trigger:
          project: beta-scap-{datacenter}

# Job updating MediaWiki core+extensions code and refreshing the message
#
# This is the poor man auto updating script. We should probably split the
# script in different part and have the jobs trigger each other.
- job-template:
    name: beta-code-update-{datacenter}
    defaults: beta
    node: deployment-bastion-{datacenter}

    # Do not run concurrently with the downstream job
    block-downstream: true

    builders:
      # The beta autoupdate script uses npm and need the home to be set to
      # mwdeploy home, that is done by passing -H to sudo
      - shell: |
          sudo -H -u mwdeploy /usr/local/bin/wmf-beta-autoupdate.py --verbose

    logrotate:
        daysToKeep: 7

    triggers:
     # Every ten minutes:
     - timed: 'H/10 * * * *'

    publishers:
      - beta-irc
      - email-ext:
          recipients: qa-alerts@lists.wikimedia.org
          attach-build-log: false
          first-failure: true
          aborted: true
          failure: false
          fixed: true
      - trigger:
          project: beta-scap-{datacenter}

- job-template:
    name: beta-scap-{datacenter}
    defaults: beta
    node: deployment-bastion-{datacenter}

    # Do not run concurrently with upstream jobs
    block-upstream: true

    builders:
      - shell: |
          /usr/local/bin/wmf-beta-scap "$JOB_NAME (build $BUILD_DISPLAY_NAME)"

    logrotate:
        daysToKeep: 7

    publishers:
      - beta-irc
      - email-ext:
          recipients: qa-alerts@lists.wikimedia.org
          content-type: 'html'
          attach-build-log: false
          first-failure: true
          aborted: true
          failure: false
          fixed: true

- job-template:
    name: beta-parsoid-update-{datacenter}
    defaults: beta
    node: deployment-parsoid-{datacenter}
    triggers:
     - zuul

    builders:
     - git-parsoid-and-deploy-repos
     - shell: |
         PARSOID_TARGET=/srv/deployment/parsoid
         mkdir -p "$PARSOID_TARGET"
         # sync workspace and deployment target
         RSYNC_OPTS="--update --times --recursive --links --delete-after --delay-updates"
         rsync $RSYNC_OPTS $WORKSPACE/parsoid "$PARSOID_TARGET"
         rsync $RSYNC_OPTS $WORKSPACE/deploy "$PARSOID_TARGET"
         # Configuration file is managed by puppet
         ln -s /srv/deployment/parsoid/localsettings.js "$PARSOID_TARGET"/parsoid/api/localsettings.js

     - shell: |
         sudo /etc/init.d/parsoid restart
    publishers:
      - beta-irc

- job-template:
    name: beta-cxserver-update-{datacenter}
    defaults: beta
    node: deployment-cxserver-{datacenter}
    triggers:
     - zuul

    builders:
     - git-cxserver-and-deploy-repos
     - shell: |
         CXSERVER_TARGET=/srv/deployment/cxserver
         mkdir -p "$CXSERVER_TARGET"
         # sync workspace and deployment target
         RSYNC_OPTS="--update --times --recursive --links --delete-after --delay-updates"
         rsync $RSYNC_OPTS $WORKSPACE/cxserver "$CXSERVER_TARGET"
         rsync $RSYNC_OPTS $WORKSPACE/deploy "$CXSERVER_TARGET"
         # Configuration file is managed by puppet
         ln -s /srv/deployment/cxserver/config.js "$CXSERVER_TARGET/cxserver/config.js"

     - shell: |
         sudo service cxserver restart
    publishers:
     - beta-irc

- publisher:
    name: beta-irc
    publishers:
      - ircbot:
          strategy: new-failure-and-fixed
          notify-start: false
          notify-committers: false
          notify-culprits: false
          notify-upstream: false
          notify-fixers: false
          message-type: summary
          matrix-notifier: only-parent
          channels:
              - name: '#wikimedia-qa'
                notify-only: true

- project:
    name: beta
    datacenter:
     - eqiad
    jobs:
     - beta-code-update-{datacenter}
     - beta-mediawiki-config-update-{datacenter}
     - beta-cxserver-update-{datacenter}
     - beta-parsoid-update-{datacenter}
     - beta-recompile-math-texvc-{datacenter}
     - beta-scap-{datacenter}
     - beta-update-databases-{datacenter}
