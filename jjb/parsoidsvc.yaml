# Runs MediaWiki core @master PHP parser tests
- job-template:
    name: parsoidsvc-hhvm-parsertests-jessie
    node: ci-jessie-wikimedia
    concurrent: true
    wrappers:
        - timeout:
            timeout: 10  # minutes
            fail: true
        - timestamps
        - ansicolor
    triggers:
        - zuul
    builders:
        - assert-phpflavor:
            phpflavor: 'hhvm'
        - assert-node-version-6
        - castor-load
        - shell: "echo -e 'mediawiki/extensions/Cite\nmediawiki/extensions/MwEmbedSupport\nmediawiki/extensions/TimedMediaHandler' > deps.txt"
        - zuul-parsoid-cloner:
            projects: >
                mediawiki/core
                $(cat deps.txt)
                mediawiki/services/parsoid
        - shell: "mv deps.txt src/mediawiki/core/extensions_load.txt"
        - composer-validate:
            dir: 'src/mediawiki/core'
        - shell: |
            # composer-local-create
            set -u
            cd src/mediawiki/core
            /srv/deployment/integration/slave-scripts/bin/mw-create-composer-local.py extensions_load.txt composer.local.json
        - composer-update:
            dir: 'src/mediawiki/core'
        - shell: |
            # Install MediaWiki in a different directory
            export MW_INSTALL_PATH="$WORKSPACE/src/mediawiki/core"
            # Keep these consistent with `prepare-mediawiki-zuul-project-no-vendor`
            /srv/deployment/integration/slave-scripts/bin/mw-install-sqlite.sh
            /srv/deployment/integration/slave-scripts/bin/mw-apply-settings.sh
            /srv/deployment/integration/slave-scripts/bin/mw-run-update-script.sh
        - shell: |
            # record the versions of parsertests we're running, for debugging
            # if something goes wrong
            find -name parserTests.txt -print0 | xargs -0 md5sum -b
            find -name langParserTests.txt -print0 | xargs -0 md5sum -b
            find -name citeParserTests.txt -print0 | xargs -0 md5sum -b
            find -name timedMediaHandlerParserTests.txt -print0 | xargs -0 md5sum -b
            # Now run parserTests
            cd src/mediawiki/core
            # export again, we're in a new shell
            export MW_INSTALL_PATH="$WORKSPACE/src/mediawiki/core"
            php tests/parser/parserTests.php --color=no --quiet \
                --file="$WORKSPACE/parsoidsvc/tests/parserTests.txt"
            php tests/parser/parserTests.php --color=no --quiet \
                --file="$WORKSPACE/parsoidsvc/tests/langParserTests.txt"
            php tests/parser/parserTests.php --color=no --quiet \
                --file="$WORKSPACE/parsoidsvc/tests/citeParserTests.txt"
            php tests/parser/parserTests.php --color=no --quiet \
                --file="$WORKSPACE/parsoidsvc/tests/timedMediaHandlerParserTests.txt"
    publishers:
        - archive-log-allow-empty
        - castor-save

- job:
    name: parsoidsvc-doc-docker-publish
    node: DebianJessieDocker
    concurrent: false
    triggers:
        - zuul
    builders:
        - docker-castor-load
        - docker-src-dir
        - docker-log-dir
        - docker-ci-src-setup-simple
        - docker-run-with-log-cache-src:
            image: 'docker-registry.wikimedia.org/releng/npm-test:0.3.0'
            logdir: '/log'
            run_args: 'doc'
        - doc-publish:
            docsrc: 'src/docs'
            docdest: 'Parsoid/master'
    publishers:
        - castor-save-workspace-cache

- project:
    name: parsoidsvc
    jobs:
        # For the deploy repo:
        # - Docker
        - '{name}-deploy-npm-node-6-docker':
            docker_image_var: 'docker-registry.wikimedia.org/releng/npm-test:0.5.0'
        - '{name}-deploy-npm-run-{script}-node-6-docker':
            docker_image_var: 'docker-registry.wikimedia.org/releng/npm-test:0.5.0'
            script:
                - roundtrip
                - toolcheck

        # Specific integration job
        - parsoidsvc-hhvm-parsertests-jessie

        # For the source repo
        - '{name}-npm-node-6-docker'
        - '{name}-npm-run-{script}-node-6-docker':
            script:
                - roundtrip
                - toolcheck
