# Runs MediaWiki core @master PHP parser tests
- job-template:
    name: parsoidsvc-hhvm-parsertests-jessie
    node: ci-jessie-wikimedia
    concurrent: true
    wrappers:
        - timeout:
            timeout: 10  # minutes
            fail: true
        - timestamps
        - ansicolor
    triggers:
        - zuul
    builders:
        - assert-phpflavor:
            phpflavor: 'hhvm'
        - assert-node-version-6
        - castor-load
        - shell: "echo -e 'mediawiki/extensions/Cite\nmediawiki/extensions/MwEmbedSupport\nmediawiki/extensions/TimedMediaHandler' > deps.txt"
        - zuul-parsoid-cloner:
            projects: >
                mediawiki/core
                $(cat deps.txt)
                mediawiki/services/parsoid
        - shell: "mv deps.txt src/mediawiki/core/extensions_load.txt"
        - composer-validate:
            dir: 'src/mediawiki/core'
        - shell: |
            # composer-local-create
            set -u
            cd src/mediawiki/core
            /srv/deployment/integration/slave-scripts/bin/mw-create-composer-local.py extensions_load.txt composer.local.json
        - composer-update:
            dir: 'src/mediawiki/core'
        - shell: |
            # Install MediaWiki in a different directory
            export MW_INSTALL_PATH="$WORKSPACE/src/mediawiki/core"
            # Keep these consistent with `prepare-mediawiki-zuul-project-no-vendor`
            /srv/deployment/integration/slave-scripts/bin/mw-install-sqlite.sh
            /srv/deployment/integration/slave-scripts/bin/mw-apply-settings.sh
            /srv/deployment/integration/slave-scripts/bin/mw-run-update-script.sh
        - shell: |
            # record the versions of parsertests we're running, for debugging
            # if something goes wrong
            find -name parserTests.txt -print0 | xargs -0 md5sum -b
            find -name citeParserTests.txt -print0 | xargs -0 md5sum -b
            find -name timedMediaHandlerParserTests.txt -print0 | xargs -0 md5sum -b
            # Now run parserTests
            cd src/mediawiki/core
            # export again, we're in a new shell
            export MW_INSTALL_PATH="$WORKSPACE/src/mediawiki/core"
            php tests/parser/parserTests.php --color=no --quiet \
                --file="$WORKSPACE/parsoidsvc/tests/parserTests.txt"
            php tests/parser/parserTests.php --color=no --quiet \
                --file="$WORKSPACE/parsoidsvc/tests/citeParserTests.txt"
            php tests/parser/parserTests.php --color=no --quiet \
                --file="$WORKSPACE/parsoidsvc/tests/timedMediaHandlerParserTests.txt"
    publishers:
        - archive-log-allow-empty
        - castor-save

- job-template:
    name: parsoidsvc-{repository}-parse-tool-check-jessie
    defaults: use-remoteonly-zuul
    node: ci-jessie-wikimedia
    concurrent: true
    wrappers:
        - timeout:
            timeout: 5
            fail: true
        - timestamps
        - ansicolor
    triggers:
        - zuul
    builders:
        - assert-node-version-6
        - castor-load
        - setup-npm-oid:
            repository: '{repository}'
        - shell: |
            # If any of these commands fail, something is wrong
            set -e
            . npm-oid.env
            cd "$NPM_SET_PATH"
            npm run toolcheck
    publishers:
     - castor-save

- job-template:
    name: parsoidsvc-{repository}-roundtrip-test-check-jessie
    defaults: use-remoteonly-zuul
    node: ci-jessie-wikimedia
    concurrent: true
    wrappers:
        - timeout:
            timeout: 10
            fail: true
        - timestamps
        - ansicolor
    triggers:
        - zuul
    builders:
        - assert-node-version-6
        - castor-load
        - setup-npm-oid:
            repository: '{repository}'
        - shell: |
            # If any of these commands fail, something is wrong
            set -e
            . npm-oid.env
            cd "$NPM_SET_PATH"
            npm run roundtrip
    publishers:
     - castor-save

- job-template:
    name: parsoidsvc-{repository}-npm-node-6-jessie
    node: ci-jessie-wikimedia
    defaults: use-remoteonly-zuul
    concurrent: true
    wrappers:
        - timeout:
            timeout: 20
            fail: true
        - timestamps
        - ansicolor
    triggers:
        - zuul
    builders:
    - assert-node-version-6
    - castor-load
    - shell: |
        # For archiving build artifacts
        mkdir -p "$WORKSPACE/log"
    - setup-npm-oid:
        repository: '{repository}'
    - shell: |
        node --version
        npm --version
        set -e
        . npm-oid.env
        cd "$NPM_SET_PATH"
        npm test
        npm run doc
    publishers:
     - archive-log-allow-empty
     - castor-save

- job-template:
    name: parsoidsvc-{repository}-jsduck-publish
    node: ci-jessie-wikimedia
    defaults: use-remote-zuul-shallow-clone
    concurrent: false
    triggers:
     - zuul
    builders:
     - assert-node-version-6
     - castor-load
     - setup-npm-oid:
         repository: '{repository}'
     - shell: |
         node --version
         npm --version
         set -e
         . npm-oid.env
         ln -s "$NPM_SET_PATH/docs" generated-docs
         cd "$NPM_SET_PATH"
         npm run doc
     - doc-publish:
         docsrc: 'generated-docs'
         docdest: 'Parsoid/$DOC_SUBPATH'
    publishers:
     - castor-save

- project:
    name: parsoidsvc
    # job templates are shared by both repositories
    repository:
     - source  # mediawiki/services/parsoid
     - deploy  # mediawiki/services/parsoid/deploy
    jobs:
        - 'parsoidsvc-{repository}-parse-tool-check-jessie'
        - 'parsoidsvc-{repository}-roundtrip-test-check-jessie'
        - 'parsoidsvc-{repository}-npm-node-6-jessie'
        - 'parsoidsvc-{repository}-jsduck-publish':
            # We only publish doc of the 'source' repo
            repository:
                - source
        - parsoidsvc-hhvm-parsertests-jessie
