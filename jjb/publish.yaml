# Sync files from a Jenkins slave in labs to a central rsync server from which
# another job (executing on gallium) can pull in the files and publish them
# on https://doc.wikimedia.org/.
#
# Parameters:
#
# docsrc: Directory holding documentation files relative to workspace (without trailing slash)
# docdest: Directory under doc.wikimedia.org/
#
- builder:
    name: doc-publish
    builders:
     # rsync folder to integration-publisher.eqiad.wmflabs
     - shell: |
         set -u
         echo "Making sure that destination does not contain unset variables (like DOC_SUBPATH, see zuul/doc_functions.py): {docdest}"
         [ $ZUUL_UUID ]
         rsync --recursive "{docsrc}/" "rsync://10.68.16.255/doc/$ZUUL_UUID"
         echo
         echo "Publishing to https://doc.wikimedia.org/{docdest}/"
     - trigger-builds:
       - project: publish-on-gallium
         block: true
         current-parameters: true  # Pass Zuul parameters
         predefined-parameters: |
           WMF_CI_PUB_DOCROOT=org/wikimedia/doc
           WMF_CI_PUB_DEST={docdest}

# Sync files from a Jenkins slave in labs to a central rsync server from which
# another job (executing on gallium) can pull in the files and publish them
# on https://integration.wikimedia.org/cover/.
#
# Parameters:
#
# src: Directory holding documentation files relative to workspace (without trailing slash)
# dest: Directory under integration.wikimedia.org/cover/
#
- builder:
    name: cover-publish
    builders:
     # rsync folder to integration-publisher.eqiad.wmflabs
     - shell: |
         set -u
         echo "Making sure that destination does not contain unset variables (like DOC_SUBPATH, see zuul/doc_functions.py): {dest}"
         [ $ZUUL_UUID ]
         rsync --recursive "{src}/" "rsync://10.68.16.255/doc/$ZUUL_UUID"
         echo
         echo "Publishing to https://integration.wikimedia.org/cover/{dest}/"
     - trigger-builds:
       - project: publish-on-gallium
         block: true
         current-parameters: true  # Pass Zuul parameters
         predefined-parameters: |
           WMF_CI_PUB_DOCROOT=org/wikimedia/integration
           WMF_CI_PUB_DEST=cover/{dest}

# rsync a directory from integration-publisher.eqiad.wmflabs to a website on gallium.
#
# Serves:
#
# - doc.wikimedia.org/:project/:version
#   * docroot: org/wikimedia/doc
#   * dest: PROJECT/$DOC_SUBPATH[/subdir]
#
# - integration.wikimedia.org/cover/:project
#   * docroot: org/wikimedia/integration
#   * dest: cover/PROJECT
#
# Uses $ZUUL_UUID as a unique identifier.
- job:
    name: publish-on-gallium
    node: gallium

    parameters:
     - string:
         # MUST NOT have leading slash.
         # MUST NOT have trailing slash.
         # MUST exist on gallium.
         name: 'WMF_CI_PUB_DOCROOT'
         description: 'A document root under /srv, such as "org/wikimedia/doc"'
     - string:
         # MUST NOT have leading slash.
         # MUST NOT have trailing slash.
         # WILL be auto-created if non-existent.
         name: 'WMF_CI_PUB_DEST'
         description: 'Sub directory path under the chosen document root, such as "mediawiki-core/DOC_SUBPATH/js"'

    triggers:
     - zuul
    builders:
     - shell: |
         set -u
         echo "Publishing $ZUUL_PROJECT from labs to prod"
         echo "Zuul UUID: $ZUUL_UUID"
         echo "..."

         [ $ZUUL_UUID ]
         LOCAL_DOCROOT="/srv/$WMF_CI_PUB_DOCROOT"
         if [ ! -d $LOCAL_DOCROOT ]; then
            echo "Error: Invalid docroot. Directory $LOCAL_DOCROOT must exist, aborting."
            exit 1
         fi
         LOCAL_DEST="$LOCAL_DOCROOT/$WMF_CI_PUB_DEST"
         mkdir -p "$LOCAL_DEST"
         rsync --recursive --delete-after "rsync://10.68.16.255/doc/$ZUUL_UUID"/ "$LOCAL_DEST"

         LOCAL_VHOST=$(echo $WMF_CI_PUB_DOCROOT | awk -F'/' '{ print $3"."$2"."$1 }')
         echo
         echo "Published to https://$LOCAL_VHOST/$WMF_CI_PUB_DEST/"
    publishers:
     - postbuildscript:
         builders:
          - shell: |
              set -u
              [ $ZUUL_UUID ]
              echo "Removing directory from publishing instance..."
              rm -rf "$ZUUL_UUID"
              # The trick here is that the local side of the rsync does not
              # have the content at all at the time of sync. Rsync expands
              # `--include="$ZUUL_UUID/***"` to mean the directory and all of
              # it's contents followed by the exclusion of all files not
              # explicitly included. Without the three wildcards rsync will not
              # touch the named directory itself.
              #
              # -- Bryan "bd808" Davis
              rsync --delete --recursive --include="$ZUUL_UUID/***" --exclude="*" . rsync://10.68.16.255/doc

         # Options are confusing, setting them both to false ensures the
         # postbuildscript is ALWAYS run.
         onsuccess: False
         onfailure: False

    logrotate:
        daysToKeep: 15
