# Jobs to build a Debian package using the set of shell scripts from
# http://jenkins-debian-glue.org/
#
# Merely a very useful wrapper / set of conventions around cowbuilder which on
# CI slaves are setup via the puppet module package_builder.
#
# Packages are build against the distribution mentionned in debian/changelog
# and we recognize the -wikimedia flavor such as 'jessie-wikimedia'.
#
# See upstream:
#    http://jenkins-debian-glue.org/docs/
#    https://github.com/mika/jenkins-debian-glue/tree/master/scripts

# Lintian checks packages for common errors. Generate a JUnit report that is
# then consumed by Jenkins Junit publisher plugin.
#
# https://lintian.debian.org/
- builder:
    name: debian-glue-lintian
    builders:
      # We might consider adding --warnings
      # --skip-lintian comes from mika/lintian
      # https://github.com/mika/jenkins-debian-glue/commit/e2beae591bada6a91ffd33a45e6c7a451dc33c3a
      - shell: |
          suffix=.lintian.txt
          for x in *$suffix; do
            echo "Converting lintian file $x"
            # For human consumption when looking at the build console
            cat "$x"
            /usr/bin/lintian-junit-report --skip-lintian --filename "$x" *.changes > "${x/$suffix/.lintian.xml}"
          done

# Piuparts test installation / removal of a package
#
# https://piuparts.debian.org/
#
- builder:
    name: debian-glue-piuparts
    builders:
      - shell: |
          DIST=$(dpkg-parsechangelog --show-field distribution -lsource/debian/changelog)
          echo "Distribution set from debian/changelog to $distribution"
          . /etc/pbuilderrc
          sudo distribution="$DIST" piuparts_wrapper "$PWD"/*.deb || true
          piuparts_tap piuparts.txt > piuparts.tap

#
# Generic job template around jenkins-debian-glue
#
- job-template: &job_template_debian_glue
    name: 'debian-glue'
    node: DebianGlue && DebianJessie
    concurrent: true
    parameters:
      # Set a default in case someone trigger the job manually
      #
      # Value is passed by Zuul, and if missed fallback to the Jenkins globally
      # set value.
      - string:
          name: BUILD_TIMEOUT
          default: '30'
          description: 'Timeout in minutes.'
    wrappers:
      - timeout:
          timeout: '${{BUILD_TIMEOUT}}'
          fail: true
      - timestamps
      - ansicolor
    triggers:
        - zuul
    builders:
        - shell: |
            # Clone from Gerrit to $WORKSPACE /source
            #
            # Have to first clone from Gerrit to have all the branches
            # (debian/upstream/master...) to be at their proper tip. The git
            # repositories on the zuul-merger instances have their head set at
            # arbitrary merge commits. Zuul cloner then checkout the
            # appropriate patch.
            #
            # The inlined clone map is to force zuul-cloner to use /source as a
            # workspace, else it would clone under /source/$ZUUL_PROJECT (the
            # default).
            zuul-cloner --version
            echo "*** Nuking previous build source tree ***"
            rm -fR source
            zuul-cloner \
                 --color \
                 --verbose \
                 --workspace source \
                 --map <(echo "clonemap: [{{name: (.*), dest: .}}]") \
                 --cache-dir /srv/git \
                 https://gerrit.wikimedia.org/r/p \
                 "$ZUUL_PROJECT"
        - shell: |
            # jenkins-debian-glue expects the job to be run with the Jenkins
            # git plugin which exposes metadata via GIT_ environement
            # variables.
            #export GIT_BRANCH="$ZUUL_BRANCH"
            export GIT_COMMIT="$ZUUL_COMMIT"
            # generate-git-snapshot checkout -f $GIT_BRANCH but zuul-cloner
            # checkout the patch in a detached branch, not in the local branch
            # $ZUUL_BRANCH
            export GIT_BRANCH="$GIT_COMMIT"

            # Always build against the debian/changelog indicated distribution,
            # gives freedom to developers to pick the Distribution the package
            # will be build against.
            distribution=$(dpkg-parsechangelog --show-field distribution -lsource/debian/changelog)
            if [ "$distribution" == "UNRELEASED" ]; then
                # Take the previous one - T181120
                distribution=$(dpkg-parsechangelog  --show-field distribution --count 1 --offset 1 -lsource/debian/changelog)
            fi
            export distribution
            echo "*** Distribution set from debian/changelog to $distribution ***"

            # FIXME would be for postmerge pipeline later on?
            if [ "$ZUUL_PIPELINE" == "gate-and-submit" ]; then
                export SKIP_DCH=true
            fi

            # $distribution can not contain dashes since it is injected in
            # debian/changelog.
            # Double curly braces are for JJB escaping.
            distribution=${{distribution//-/+}} /usr/bin/generate-git-snapshot

            # Skip repository setup
            # FIXME: later on we could have postmerge to publish the resulting
            # package to some kind of central repository by using REPOSITORY
            # and REPOS.
            export BUILD_ONLY=yes

            # We set DIST which is used by pbuilderrc to determine whether it a
            # Wikimedia flavor.  We point jenkins-debian-glue cowbuilder path
            # to the canonical image, ie have jessie-wikimedia to point to
            # base-jessie-amd64.cow and init hook
            #
            # Since $WIKIMEDIA is set, the hook will inject apt.wikimedia.org
            #
            # NOTE: build-and-provide-package invokes cowbuilder with sudo
            # which strips out every environment variables. They have to be
            # explicitly whitelisted on Wikitech sudo policy at
            # https://wikitech.wikimedia.org/wiki/Special:NovaSudoer
            #
            # Example:
            #   env_keep+=distribution
            #
            export DIST=$distribution
            . /etc/pbuilderrc

            # Copy Wikimedia and Debian glue hooks under a common directory
            rm -fR pbuilder_hooks
            mkdir pbuilder_hooks
            cp /usr/share/jenkins-debian-glue/pbuilder-hookdir/* pbuilder_hooks/
            cp "$HOOKDIR"/* pbuilder_hooks/
            export PBUILDER_HOOKDIR="$(pwd)/pbuilder_hooks/"

            export COWBUILDER_BASE="$BASEPATH"
            export BUILDRESULT="$WORKSPACE/binaries"
            export SKIP_COWBUILDER_UPDATE="true"

            # Prevent our C10shell out from opening a shell on build failure
            export SHELL_ON_FAILURE="no"

            # Use Wikimedia hooks provided by puppet ::package_builder but
            # override some settings such as BUILDRESULT
            #
            # See T141538
            echo "*** Overriding Wikimedia BUILDRESULT ***"
            cat /etc/pbuilderrc > job-pbuilderrc
            echo "BUILDRESULT=$BUILDRESULT" >> job-pbuilderrc

            echo "*** Overriding HOOKDIR ***"
            echo "HOOKDIR=$PBUILDER_HOOKDIR" >> job-pbuilderrc

            export PBUILDER_CONFIG="$WORKSPACE/job-pbuilderrc"
            export LINTIAN=true
            /usr/bin/build-and-provide-package
        # Linters
        - debian-glue-lintian
        # Piuparts does NOT run in cowbuilder which is source of false
        # positives, specially when the tar.gz is severly outdated
        # T141454 T148664
        #- debian-glue-piuparts
        - shell: |
            set -o pipefail
            jdg-debc | tee debc.txt
    publishers:
      - xunit:
          thresholdsmode: 'number'
          thresholds:
              - failed:
                  # Has to be set explicitly for "junit" type
                  failure: 0
          types:
              - junit:
                  pattern: '*lintian.xml'
      # FIXME should convert UNSTABLE to FAILED.
      # FIXME disabled due to T141454 T148664
      #- tap:
      #    results: piuparts.tap
      - archive:
          artifacts: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.buildinfo,*.changes,debc.txt,*lintian.txt,*lintian.xml,piuparts.txt,piuparts.tap'

- job-template:
    !!merge : *job_template_debian_glue
    name: 'debian-glue-non-voting'
    # Reinject Zuul parameters since JJB strip them for some reason
    triggers:
     - zuul

# Alias jobs that would have BACKPORTS=yes injected by Zuul
- job-template:
    !!merge : *job_template_debian_glue
    name: 'debian-glue-backports'
    # Reinject Zuul parameters since JJB strip them for some reason
    triggers:
     - zuul

- job-template:
    !!merge : *job_template_debian_glue
    name: 'debian-glue-backports-non-voting'
    # Reinject Zuul parameters since JJB strip them for some reason
    triggers:
     - zuul

#
# PROJECTS
#
# FIXME later on that should be autogenerated for each postmerge job.
#
- project:
    name: debian-glue
    jobs:
        - 'debian-glue'
        - 'debian-glue-non-voting'
        - 'debian-glue-backports'
        - 'debian-glue-backports-non-voting'
