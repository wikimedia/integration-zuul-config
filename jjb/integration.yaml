# Jobs for integration/*

# Job that update the file hierarchy maintained by CI.
#
# As of July 2013 the two main entry points are:
# - integration.wikimedia.org
# - doc.wikimedia.org
- job-template:
    name: 'integration-docroot-deploy'
    node: contint1001
    defaults: global
    concurrent: false  # updates website
    triggers:
     - zuul
    builders:
     - shell: |
        #!/bin/bash -e
        cd /srv/
        git remote update
        git checkout $ZUUL_COMMIT
        echo "`date -R`> $ZUUL_COMMIT" >> /srv/jenkins-autodeploy

- job-template:
    name: 'integration-zuul-layoutvalidation-gate'
    # Same distro as the prod machine hosting Zuul server
    node: contintLabsSlave && DebianJessie
    defaults: use-remoteonly-zuul
    concurrent: true
    triggers:
     - zuul
    builders:
     - shell: |
        rm -f jenkins_jobs.txt
        python /srv/deployment/integration/slave-scripts/bin/jenkins-jobs-list.py > jenkins_jobs.txt
        /usr/bin/zuul-server -c tests/fixtures/zuul-dummy.conf -t jenkins_jobs.txt -l "$WORKSPACE"/zuul/layout.yaml

# Job for Zuul configuration validation
# Make sure the Zuul config is passed and show a different with the previous
# config.
- job-template:
    name: 'integration-zuul-layoutdiff'
    # Same distro as the prod machine hosting Zuul server
    node: contintLabsSlave && DebianJessie
    defaults: use-remoteonly-zuul
    concurrent: true
    triggers:
     - zuul
    builders:
     - shell: |
        set +e
        rm -fR log
        mkdir -p log

        # Install zuul based on /test-requirements.txt and activate venv
        #
        export TOX_TESTENV_PASSENV=PY_COLORS
        export PY_COLORS=1

        tox -e zuul_tests -v -v --notest
        . .tox/zuul_tests/bin/activate
        zuul-server --version

        zuul-server -c tests/fixtures/zuul-dummy.conf -t -l "$WORKSPACE"/zuul/layout.yaml 2>log/current.txt
        git checkout HEAD^
        zuul-server -c tests/fixtures/zuul-dummy.conf -t -l "$WORKSPACE"/zuul/layout.yaml 2>log/before.txt

        sed -i -e 's/^INFO:zuul\..*:Configured Pipeline Manager /Pipeline: /' log/current.txt log/before.txt

        function compress_logs() {{
            gzip --best log/before.txt log/current.txt
        }}
        trap compress_logs EXIT

        colordiff --show-function-line='^Pipeline: ' -u log/before.txt log/current.txt
    publishers:
     - archive-tox-logs
     - archive-log-dir

- job-template:
    name: 'integration-jjb-config-diff-docker'
    node: DebianJessieDocker
    concurrent: true
    triggers:
        - zuul
    builders:
        - docker-castor-load
        - docker-log-dir
        # we need a full clone
        - docker-zuul-cloner:
            projects: >
                integration/config
        - docker-run-with-log-cache-src:
            image: 'docker-registry.wikimedia.org/releng/tox:0.1.0'
            options: '--workdir=/src/integration/config --entrypoint=/src/integration/config/jjb/diff.sh'
            logdir: '/log'
    publishers:
        - castor-save-workspace-cache
        - docker-cleanup

# Super basic sanity check for integration/composer repo
- job-template:
    name: 'integration-composer-check-{phpflavor}-docker'
    node: DebianJessieDocker
    concurrent: true
    triggers:
     - zuul
    builders:
     - docker-src-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
         image: '{docker_image}'
         args: '/src/vendor/bin/composer --version'
         logdir: '/log'

- project:
    name: 'integration-composer'
    jobs:
     - 'integration-composer-check-{phpflavor}-docker':
         phpflavor:
             - php55:
                 docker_image: docker-registry.wikimedia.org/releng/php55:0.1.1

- job:
    name: integration-config-qa
    node: DebianJessieDocker
    triggers:
     - timed: '0 3 * * *'
    scm:
     - git:
         url: 'https://gerrit.wikimedia.org/r/p/integration/config.git'
         branches:
             - master
    parameters:
        - string:
            name: 'ZUUL_URL'
            default: 'https://gerrit.wikimedia.org/r/p'
        - string:
            name: 'ZUUL_PROJECT'
            default: 'integration/config'
        - string:
            name: 'ZUUL_REF'
            default: 'master'
    builders:
     - docker-log-dir
     - docker-run-with-log-and-workspace-cache:
         image: 'docker-registry.wikimedia.org/releng/tox:0.1.0'
         logdir: '/log'
         args: '-e qa -- --xunit-file=/log/junit-qa.xml'
    publishers:
     - archive-log-dir
     - xunit:
         types:
             - junit:
                 pattern: 'log/junit*.xml'
     - email-ext:
         recipients: hashar@free.fr qa-alerts@lists.wikimedia.org
         content-type: html
         failure: true
         unstable: true
         body: |
             ${SCRIPT, template="wikimedia.template"}
             <h2>Changes since last build</h2>
             <p>
             ${CHANGES_SINCE_LAST_BUILD}</p>
             <h2>Console output</h2>
             <pre>
             ${BUILD_LOG}
             </pre>
     - docker-cleanup

- project:
    name: 'integration-config'
    jobs:
     - 'integration-jjb-config-diff-docker'
     - 'integration-zuul-layoutdiff'
     - 'integration-zuul-layoutvalidation-gate'
     - '{name}-tox-docker'

- project:
    name: 'integration-docroot'
    jobs:
     - 'integration-docroot-deploy'

- project:
    name: 'integration-quibble'
    jobs:
        - '{name}-tox-publish':
            docsrc: 'doc/build/html'
            docdest: 'quibble'

- project:
    name: jenkins-plugin
    project:
        - android-emulator
        - postbuildscript
    jobs:
        - '{name}-{project}-maven-java8-docker':
            # XXX hack because of jenkins-test-harness
            docker_run_options: -v "$(pwd)/cache/testm2:/nonexistent/.m2"
