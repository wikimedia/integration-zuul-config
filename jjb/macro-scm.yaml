# MediaWiki core has branches that contains lot of extensions. Whenever
# we test master (which has no submodule) and then a wmf branch (which
# have submodules) we end up refetching all the extensions which is really
# slow.
#
# This git macro hardcodes mediawiki/core to never update the submodules.
#
- scm:
    name: git-mwcore
    scm:
     - git:
        url: '$ZUUL_URL/mediawiki/core'
        reference-repo: '/srv/ssd/gerrit/mediawiki/core.git'
        branches:
         - '$ZUUL_COMMIT'
        refspec: '$ZUUL_REF'
        disable-submodules: true
        wipe-workspace: false
        clean: true

- scm:
    name: git-localonly-zuul
    scm:
     - git:
        url: '/srv/ssd/zuul/git/$ZUUL_PROJECT'
        branches:
         - '$ZUUL_COMMIT'
        refspec: '$ZUUL_REF'
        wipe-workspace: false
        clean: true
        # XXX: Why only this one recursive?
        recursive-submodules: true

# Same as git-localonly-zuul but fetches the Zuul changes using two repositories:
#
# a) $ZUUL_URL/*
# Zuul maintained non-bare repository (ie does not ends with '.git')
#
# b) /srv/ssd/gerrit/*.git
#
# The latter is a local Gerrit replication destination (bare repository, ends
# with '.git'). This saves network access and speed up the process by allowing
# git to do a hardlink (the replicated repositories and the job workspace
# are on the same device mounted as /srv/ssd).
- scm:
    name: git-remote-zuul
    scm:
     - git:
        url: '$ZUUL_URL/$ZUUL_PROJECT'
        reference-repo: '/srv/ssd/gerrit/$ZUUL_PROJECT.git'
        branches:
         - '$ZUUL_COMMIT'
        refspec: '$ZUUL_REF'
        wipe-workspace: false
        clean: true

# This one doesn't rely on a local /srv/ssd/gerrit replication dest, this is to
# be used for slaves hosted in labs (e.g. contintLabsSlave nodes).
- scm:
    name: git-remoteonly-zuul
    scm:
     - git:
        url: '$ZUUL_URL/$ZUUL_PROJECT'
        branches:
         - '$ZUUL_COMMIT'
        refspec: '$ZUUL_REF'
        wipe-workspace: false
        clean: true

- scm:
    name: git-remote-zuul-no-submodules
    scm:
     - git:
        url: '$ZUUL_URL/$ZUUL_PROJECT'
        reference-repo: '/srv/ssd/gerrit/$ZUUL_PROJECT.git'
        branches:
         - '$ZUUL_COMMIT'
        refspec: '$ZUUL_REF'
        wipe-workspace: false
        clean: true
        disable-submodules: true

- scm:
    name: git-remote-zuul-shallow-clone
    scm:
     - git:
        url: '$ZUUL_URL/$ZUUL_PROJECT'
        branches:
         - '$ZUUL_COMMIT'
        refspec: '$ZUUL_REF'
        wipe-workspace: true
        shallow-clone: true


# Wrapper around Zuul Cloner
#
# Fallback to the branch ZUUL_BRANCH.
# Repositories are cloned under /src/
#
# Example usage:
#
#    builders:
#     - zuul-cloner:
#         projects: >
#             mediawiki/core
#             mediawiki/vendor
#
- builder:
    name: zuul-cloner
    builders:
        - shell: |
            /usr/local/bin/zuul-cloner --version
            /usr/local/bin/zuul-cloner \
                --color \
                --verbose \
                --map /srv/deployment/integration/slave-scripts/etc/zuul-clonemap.yaml \
                --workspace src \
                https://gerrit.wikimedia.org/r/p \
                {projects}
