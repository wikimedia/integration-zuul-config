# Parameters:
#
# dependencies: comma or spaces/newlines separated list of extensions to clone
#
- builder:
    name: 'zuul-cloner-extdeps'
    builders:
     - shell: |
         set +x
         echo "Building dependencies list..."
         rm -f deps.txt
         touch deps.txt
         echo "mediawiki/core" >> deps.txt
         if [ "{dependencies}" != "" ]; then
             echo "> rest of dependencies..."
             echo "$(IFS=', '; for dep in `echo {dependencies}`; do echo mediawiki/extensions/$dep; done;)" >> deps.txt
         fi
         echo "Dependencies list complete."
     - zuul-cloner:
         projects: >
             $(cat deps.txt)
     - ext-skins-submodules-update

# Workaround zuul-cloner not processing submodules
- builder:
    name: ext-skins-submodules-update
    builders:
     - shell: |
         find src/extensions src/skins -maxdepth 2 \
            -name .gitmodules \
            -execdir bash -xe -c '
                git submodule foreach git clean -xdff -q
                git submodule update --init --recursive
                git submodule status
                ' \;

- builder:
    name: prepare-mediawiki-zuul-project
    builders:
     - shell: "echo $ZUUL_PROJECT > deps.txt"
     - shell: "echo -e $EXT_DEPENDENCIES >> deps.txt"
     - shell: "echo -e $SKIN_DEPENDENCIES > deps_skins.txt"
     # Clone both extensions and skins, but only extensions get listed for the
     # extensions autoloader in integration/jenkins.git, skins are
     # automatically injected by MediaWiki upon installation.
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
             $(cat deps.txt)
             $(cat deps_skins.txt)
     - ext-skins-submodules-update
     - shell: "mv deps.txt src/extensions_load.txt"
     - mw-install-mysql
     - mw-apply-settings
     - mw-run-update-script

# same except for use with composer instead of cloning vendor
- builder:
    name: prepare-mediawiki-zuul-project-no-vendor
    builders:
     - shell: "echo $ZUUL_PROJECT > deps.txt"
     - shell: "echo -e $EXT_DEPENDENCIES >> deps.txt"
     - shell: "echo -e $SKIN_DEPENDENCIES > deps_skins.txt"
     - zuul-cloner:
         projects: >
             mediawiki/core
             $(cat deps.txt)
             $(cat deps_skins.txt)
     - ext-skins-submodules-update
     - shell: "mv deps.txt src/extensions_load.txt"
     - composer-validate:
         dir: 'src'
     - composer-local-create:
         deps: 'extensions_load.txt'
     - composer-update:
         dir: 'src'
     - mw-install-mysql
     - mw-apply-settings
     - mw-run-update-script

- builder:
    name: prepare-mediawiki-zuul-project-no-vendor-no-sql
    builders:
     - shell: "echo $ZUUL_PROJECT > deps.txt"
     - shell: "echo -e $EXT_DEPENDENCIES >> deps.txt"
     - shell: "echo -e $SKIN_DEPENDENCIES > deps_skins.txt"
     # Use composer to install dependencies instead cloning mediawiki/vendor,
     # Clone both extensions and skins, but only extensions get listed for the
     # extensions autoloader in integration/jenkins.git, skins are
     # automatically injected by MediaWiki upon installation.
     - zuul-cloner:
         projects: >
             mediawiki/core
             $(cat deps.txt)
             $(cat deps_skins.txt)
     - ext-skins-submodules-update
     - shell: "mv deps.txt src/extensions_load.txt"
     - composer-validate:
         dir: 'src'
     - composer-local-create:
         deps: 'extensions_load.txt'
     - composer-update:
         dir: 'src'

- builder:
    name: prepare-mwext-coverage
    builders:
     - shell: |
        # XXX: MediaWiki auto-enables any skins it can find
        # But we only want to enable the skins that this extension
        # needs, so remove any other skins that might be laying around.
        rm -rf "$WORKSPACE/src/skins/"
     - prepare-mediawiki-zuul-project
     - mw-fetch-composer-dev
     # FIXME should use the mw-phpunit.sh wrapper
     - shell: |
        . "/srv/deployment/integration/slave-scripts/bin/mw-set-env.sh"
        # We need to edit suite.xml to use the proper coverage paths.
        /srv/deployment/integration/slave-scripts/bin/suite-edit.py $MW_INSTALL_PATH/tests/phpunit/suite.xml --cover-extension "$EXT_NAME"


# Generic qunit job for extensions.
- job:
    name: 'mwext-qunit-jessie'
    node: ci-jessie-wikimedia
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - prepare-mediawiki-zuul-project
     - qunit-karma
    publishers:
     - castor-save
     - archive-log-dir

# Generic qunit job for extensions with composer update.
- job:
    name: 'mwext-qunit-composer-jessie'
    node: ci-jessie-wikimedia
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - prepare-mediawiki-zuul-project-no-vendor
     - qunit-karma
    publishers:
     - castor-save
     - archive-log-dir

# Same as mwext-mw-selenium-jessie but runs `bundle exec rake spec` instead of `bundle exec cucumber` T146916
- job:
    name: 'mwext-ruby-jessie'
    node: ci-jessie-wikimedia
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - prepare-mediawiki-zuul-project
     - ruby-nodepool
    publishers:
     - castor-save
     - archive-log-dir
    properties:
     - build-discarder:
         days-to-keep: 15
         artifact-days-to-keep: 3

# Generic mw-selenium job for extensions.
- job:
    name: 'mwext-mw-selenium-jessie'
    node: ci-jessie-wikimedia
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - prepare-mediawiki-zuul-project
     - mw-selenium-nodepool:
         tests-dir: src/extensions/$EXT_NAME/tests/browser
    publishers:
     - castor-save
     - archive-log-dir
    properties:
     - build-discarder:
         days-to-keep: 15
         artifact-days-to-keep: 3

# Generic mw-selenium job for extensions with composer install
# Same as mwext-mw-selenium-composer but on Nodepool T137112
- job:
    name: 'mwext-mw-selenium-composer-jessie'
    node: ci-jessie-wikimedia
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - prepare-mediawiki-zuul-project-no-vendor
     - mw-selenium-nodepool:
         tests-dir: src/extensions/$EXT_NAME/tests/browser
    publishers:
     - castor-save
     - archive-log-dir
    properties:
     - build-discarder:
         days-to-keep: 15
         artifact-days-to-keep: 3

- job-template:
    name: 'mwext-{name}-whitespaces'
    node: contintLabsSlave && DebianJessie
    defaults: use-remoteonly-zuul
    concurrent: true
    properties:
     - build-discarder:
         days-to-keep: 15
    triggers:
     - zuul
    builders:
     - lint-whitespaces

# composer test in src/extensions/$EXT_NAME
- builder:
    name: composer-test-mwextension
    builders:
     - composer-validate:
         dir: 'src/extensions/$EXT_NAME'
     - composer-install:
         dir: 'src/extensions/$EXT_NAME'
     - composer-test:
         dir: 'src/extensions/$EXT_NAME'
     # Clear up the above composer install
     - shell:
         git -C "src/extensions/$EXT_NAME" clean -xqdf

- job-template: &job_mwext-testextension-image
    name: 'mwext-testextension-{phpflavor}-{image}'
    node: ci-{image}-wikimedia
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - assert-phpflavor:
         phpflavor: '{phpflavor}'
     - hhvm-clear-hhbc
     - prepare-mediawiki-zuul-project
     - composer-test-mwextension
     - mw-fetch-composer-dev
     - mw-run-phpunit-allexts
    publishers:
     - junit:
        results: 'log/junit*.xml'
     - castor-save
     - archive-log-dir

- job-template:
    name: 'mwext-testextension-{phpflavor}-{image}-non-voting'
    !!merge : *job_mwext-testextension-image
    # Reinject Zuul parameters since JJB strip for some reason
    triggers:
     - zuul

- job-template: &job_mwext-testextension-composer-image
    name: 'mwext-testextension-{phpflavor}-composer-{image}'
    node: ci-{image}-wikimedia
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - assert-phpflavor:
         phpflavor: '{phpflavor}'
     - hhvm-clear-hhbc
     - prepare-mediawiki-zuul-project-no-vendor
     - composer-test-mwextension
     - mw-run-phpunit-allexts
    publishers:
     - junit:
        results: 'log/junit*.xml'
     - archive-log-dir
     - castor-save

- job-template:
    name: 'mwext-testextension-{phpflavor}-composer-{image}-non-voting'
    !!merge : *job_mwext-testextension-composer-image
    # Reinject Zuul parameters since JJB strip for some reason
    triggers:
     - zuul

- project:
    name: 'mwext-testextension-generic'
    jobs:
     # Nodepool
     - 'mwext-testextension-{phpflavor}-{image}': &phpflavor_images
         phpflavor:
             - php55:
                 image: jessie
             - hhvm:
                 image: jessie
     - 'mwext-testextension-{phpflavor}-{image}-non-voting': *phpflavor_images
     - 'mwext-testextension-{phpflavor}-composer-{image}': *phpflavor_images
     - 'mwext-testextension-{phpflavor}-composer-{image}-non-voting': *phpflavor_images

- job:
    name: 'mwext-jsduck-publish'
    node: DebianJessieDocker
    concurrent: false
    triggers:
     - zuul
    builders:
     - docker-log-dir
     - docker-src-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
         image: docker-registry.wikimedia.org/releng/jsduck:0.1.0
         logdir: '/log'
     - doc-publish:
        docsrc: 'src/docs'
        docdest: '$DOC_BASENAME/$ZUUL_BRANCH/js'
    archive:
     - archive-log-allow-empty

- job-template:
    name: 'mwext-PoolCounter-build-jessie'
    node: ci-jessie-wikimedia
    defaults: use-remoteonly-zuul
    triggers:
     - zuul
    builders:
     - castor-load
     - shell: |
        cd daemon
        make test
    publishers:
     - archive:
         artifacts: daemon/poolcounterd
     - castor-save

- job:
    name: 'mwext-VisualEditor-publish'
    node: ci-jessie-wikimedia
    defaults: use-remoteonly-zuul
    concurrent: false
    triggers:
     - zuul
    builders:
     - castor-load
     - npm-install
     - npm-run:
         script: doc
     - doc-publish:
        docsrc: 'docs'
        docdest: 'VisualEditor/$ZUUL_BRANCH'
    publishers:
     - castor-save

- job:
    name: 'mwext-doxygen-publish'
    node: DebianJessieDocker
    concurrent: false
    triggers:
     - zuul
    builders:
     - docker-log-dir
     - docker-src-dir
     - docker-run-with-log-cache-src:
         image: docker-registry.wikimedia.org/releng/doxygen:0.3.0
         logdir: '/log'
     - doc-publish:
        docsrc: 'src/docs/php'
        docdest: '$DOC_BASENAME/$DOC_SUBPATH/php'
    archive:
     - archive-log-allow-empty

# Phan! (T153039)
- job:
    name: 'mwext-php70-phan-docker'
    node: DebianJessieDocker && m4executor
    concurrent: true
    properties:
     - build-discarder:
         days-to-keep: 15
    triggers:
     - zuul
    builders:
     - docker-log-dir
     - docker-src-dir
     - docker-cache-dir
     - docker-ci-src-setup-mwext
     - shell: |
        #!/bin/bash -eu
        set -x
        exec docker run \
            --rm \
            --volume "$(pwd)"/src:/mediawiki \
            docker-registry.wikimedia.org/releng/mediawiki-phan:0.1.1 \
            /$ZUUL_PROJECT -m checkstyle
        # nothing else can be executed due to exec

    publishers:
     - checkstyle:
        pattern: 'log/phan-issues'
        can-run-on-failed: true
        thresholds:
          failed:
            total-all: 1

- job:
    name: 'mwext-php70-phan-seccheck-docker'
    node: DebianJessieDocker && m4executor
    concurrent: true
    properties:
     - build-discarder:
         days-to-keep: 15
    triggers:
     - zuul
    builders:
     - docker-log-dir
     - docker-src-dir
     - docker-cache-dir
     - docker-ci-src-setup-mwext
     - shell: |
        #!/bin/bash -eu
        set -x
        exec docker run \
            --rm \
            --env EXT_NAME=$EXT_NAME \
            --volume "$(pwd)"/src:/mediawiki \
            docker-registry.wikimedia.org/releng/mediawiki-phan-seccheck:0.1.0 \
            -m checkstyle
        # nothing else can be executed due to exec

    publishers:
     - checkstyle:
        pattern: 'src/seccheck-issues'
        can-run-on-failed: true
        thresholds:
          failed:
            total-all: 1


- project:
    name: 'mwext-CirrusSearch'
    jobs:
     - 'mwext-{name}-whitespaces':
        name: CirrusSearch
- project:
    name: 'mwext-MobileFrontend'
    jobs:
     - 'mwext-MobileFrontend-npm-run-lint-modules'

- project:
    name: 'mwext-PoolCounter'
    jobs:
     - 'mwext-PoolCounter-build-jessie'

- project:
    name: 'mwext-VisualEditor'
    jobs:
     - '{name}-jsduck-docker'

# Run Selenium tests daily targeting beta cluster
# similar to mediawiki-core-qunit-selenium-jessie
- job-template:
    name: 'selenium-{name}-jessie'
    node: ci-jessie-wikimedia
    concurrent: true
    triggers:
     - timed: '@daily'
    properties:
     - build-discarder:
         days-to-keep: 15
    parameters:
     - string:
         name: ZUUL_PROJECT
         default: mediawiki/extensions/{name}
     - string:
         name: ZUUL_BRANCH
         default: master
    wrappers:
      - ansicolor
      - timeout:
          timeout: 180
      - timestamps
      # Wiki usernames and passwords are hold in Jenkins credentials store
      # https://integration.wikimedia.org/ci/credentials/store/system/domain/selenium/
      - credentials-binding:
          - text:
              credential-id: selenium-user-beta
              variable: selenium_user_beta
    builders:
     - castor-load
     - prepare-mediawiki-zuul-project
     - npm-install-selenium
     - shell: |
         . /srv/deployment/integration/slave-scripts/bin/mw-set-env.sh
         chromedriver --url-base=/wd/hub --port=4444 &
         cd $MW_INSTALL_PATH
         set +x
         export MEDIAWIKI_PASSWORD="$selenium_user_beta"
         set -x
         MEDIAWIKI_USER='Selenium user' MW_SERVER=https://en.wikipedia.beta.wmflabs.org:443 MW_SCRIPT_PATH=/w ./node_modules/.bin/wdio tests/selenium/wdio.conf.jenkins.js --spec extensions/{name}/tests/selenium/specs/*.js
     - assert-no-mediawiki-errors
    publishers:
     - castor-save
     - archive-log-dir
     - junit:
        results: 'log/junit*.xml,log/WDIO.xunit*.xml'
        # Qunit does not generate Junit file and we might skip selenium
        allow-empty-results: true

- project:
    name: CirrusSearch
    repository: mediawiki/extensions/CirrusSearch

    jobs:
     - 'selenium-{name}-jessie'


- project:
    name: RelatedArticles
    repository: mediawiki/extensions/RelatedArticles

    jobs:
     - 'selenium-{name}-jessie'

- project:
    name: Popups
    repository: mediawiki/extensions/Popups

    jobs:
     - 'selenium-{name}-jessie'

- job:
    name: 'mwext-phpunit-coverage-patch'
    node: contintLabsSlave && DebianJessie
    concurrent: false
    builders:
     - prepare-mwext-coverage
     - shell: |
        . "/srv/deployment/integration/slave-scripts/bin/mw-set-env.sh"

        cd $WORKSPACE/src/extensions/$EXT_NAME
        composer require mediawiki/phpunit-patch-coverage 0.0.5 --no-progress
        # FIXME This is terrible, but composer require creates a dirty diff.
        git checkout composer.json
        ./vendor/bin/phpunit-patch-coverage check --command \
            "php7.0 -d zend_extension=xdebug.so $MW_INSTALL_PATH/tests/phpunit/phpunit.php"

    triggers:
     - zuul
    wrappers:
     - ansicolor
     - timestamps


- job:
    name: 'mwext-phpunit-coverage-publish'
    node: contintLabsSlave && DebianJessie
    concurrent: false
    builders:
     - prepare-mwext-coverage
     - shell: |
        . "/srv/deployment/integration/slave-scripts/bin/mw-set-env.sh"

        mkdir -p log
        rm -f log/clover.xml log/clover.bz2

        rm -fR "$WORKSPACE/cover"
        mkdir -p "$WORKSPACE/cover"

        nice -n 19 \
            php7.0 -d zend_extension=xdebug.so \
                $MW_INSTALL_PATH/tests/phpunit/phpunit.php \
                    --testsuite extensions \
                    --coverage-clover log/clover.xml \
                    --coverage-html "$WORKSPACE/cover" \
                    "$MW_INSTALL_PATH/extensions/$EXT_NAME/tests/phpunit" \
            || :
        # Above: Use "|| :" to ignore any non-zero exist status
        # We want to publish code coverage even in case one of there
        # being PHPUnit test failures. Normal test failures are not
        # fatal and PHPUnit will stil generate console output, clover
        # reports and and html reports. However don't blindly
        # make the job pass either because if we do, then cover-publish
        # will end up syncing an empty directory, which deletes the
        # coverage report from doc.wikimedia.org. In case of "real" failure,
        # let the job fail and don't publish a new report. "real" failures
        # can be a PHP Fatal error, of a segfault, for example.
        test -f cover/index.html

        if [ -s "log/clover.xml" ]; then
            cp log/clover.xml "$WORKSPACE/cover/clover.xml"
        fi

     - cover-extensions-publish:
         src: 'cover'
         # Should be equivalent to $EXT_NAME
         dest: '$DOC_BASENAME'
    publishers:
     - archive:
         artifacts: 'log/*'
     - mw-teardown
     - beta-irc  # Spam #wikimedia-releng on failure
    triggers:
     - zuul
    wrappers:
     - ansicolor
     - timestamps
