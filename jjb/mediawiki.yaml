# This file holds the configuration for all MediaWiki core related jobs.

# Note that mediawiki/core branches may have a lot of submodules, we thus
# usually need to NOT process submodules (eg: zuul-cloner).
# See https://phabricator.wikimedia.org/T44455

- job-template:
    name: 'mediawiki-core-qunit-selenium-jessie'
    node: ci-jessie-wikimedia
    concurrent: true
    triggers:
     - zuul
    properties:
     - build-discarder:
         days-to-keep: 15
    builders:
     - castor-load
     - prepare-mediawiki-zuul-project
     - qunit-karma
     - mw-wdio-nodepool
     - assert-no-mediawiki-errors
    publishers:
     - castor-save
     - archive-log-dir
     - junit:
        results: 'log/junit*.xml,log/WDIO.xunit*.xml'
        # Qunit does not generate Junit file and we might skip selenium
        allow-empty-results: true

- job:
    name: 'mediawiki-core-jsduck-docker-publish'
    node: DebianJessieDocker
    concurrent: false
    properties:
        - build-discarder:
            days-to-keep: 15
    triggers:
        - zuul
    builders:
        - assert-env-doc_subpath
        - docker-castor-load
        - docker-log-dir
        - docker-src-dir
        - docker-ci-src-setup-simple
        - docker-run-with-log-cache-src:
            image: docker-registry.wikimedia.org/releng/npm-test:0.3.0
            run_args: 'doc'
            logdir: '/log'
        - doc-publish:
           docsrc: 'src/docs/js'
           docdest: 'mediawiki-core/$DOC_SUBPATH/js'
    publishers:
        - archive-log-allow-empty
        - castor-save-workspace-cache

- job:
    name: 'mediawiki-core-doxygen-docker'
    node: DebianJessieDocker
    # We dont want to overload CI when multiple branches have been updated
    concurrent: false
    triggers:
        - pollscm:
            cron: '@hourly'
    scm:
        - git:
            url: 'https://gerrit.wikimedia.org/r/p/mediawiki/core.git'
            do-not-fetch-tags: true
            branches:
                - :^origin/master
                - :^origin/REL\d+_\d+
            clean:
                before: true
                after: true
            basedir: src
            # Checkout to a local branch with 'origin/' stripped. That also set
            # GIT_LOCAL_BRANCH which we use later to publish the documentation.
            local-branch: '**'
    builders:
        - docker-log-dir
        - shell: |
            install -d -m 777 log/build/
        - shell: |
            rm -fR src/vendor && mkdir -p src/vendor
            git clone \
                --depth 1 \
                --reference /srv/git/mediawiki/vendor.git \
                --branch "$GIT_LOCAL_BRANCH" \
                -- \
                https://gerrit.wikimedia.org/r/p/mediawiki/vendor.git \
                src/vendor
        - shell: |
            touch src/LocalSettings.php
        - docker-run-with-log-cache-src:
            image: docker-registry.wikimedia.org/releng/doxygen:0.3.0
            docker_run_options: '--workdir /src --entrypoint=/usr/bin/php'
            logdir: '/log'
            run_args: |
                maintenance/mwdocgen.php \
                    --no-extensions \
                    --output /log/build \
                    --version "$GIT_LOCAL_BRANCH" \
                    1> >(tee console.txt) \
                    2> >(tee errors.txt >&2)
            # IO redirections happen on the host.
            #
            # stderr is sent as stdin to a tee FIFO which write back to stderr
            # allowing to display and capture stderr.
        - shell: |
            # We want stdout/stderr published on doc.wikimedia.org
            install -m 666 console.txt log/build/
            install -m 666 errors.txt log/build/
        - doc-publish:
            docsrc: 'log/build/html'
            docdest: 'mediawiki-core/${GIT_LOCAL_BRANCH}/php'
        - docker-wipe-dir:
            dir: log/build
    publishers:
        - archive:
            artifacts: 'console.txt,errors.txt'
            allow-empty: true

# Runs all MediaWiki PHPUnit tests on Nodepool
- job-template:
    name: 'mediawiki-phpunit-{phpflavor}-{image}'
    node: ci-{image}-wikimedia
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - assert-phpflavor:
         phpflavor: '{phpflavor}'
     - hhvm-clear-hhbc
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
     - mw-install-mysql
     - mw-apply-settings
     - mw-fetch-composer-dev
     - shell: "/srv/deployment/integration/slave-scripts/bin/mw-phpunit.sh"
     - assert-no-mediawiki-errors
    publishers:
     - phpunit-junit-2
     - archive-log-dir
     - castor-save

# Same as mediawiki-phpunit-{phpflavor}, except uses composer instead of mediawiki/vendor.
# Currently experimental, will eventually be used for `master`, and
# wmf/ branches will use mediawiki/vendor. See T90303.
- job-template:
    name: 'mediawiki-phpunit-{phpflavor}-composer-{image}'
    node: ci-{image}-wikimedia
    concurrent: true
    properties:
     - build-discarder:
         days-to-keep: 15
    triggers:
     - zuul
    builders:
     - castor-load
     - assert-phpflavor:
         phpflavor: '{phpflavor}'
     - hhvm-clear-hhbc
     - zuul-cloner:
         projects: >
             mediawiki/core
     - composer-validate:
         dir: 'src'
     - composer-update:
         dir: 'src'
     - mw-install-mysql
     - mw-apply-settings
     - shell: "/srv/deployment/integration/slave-scripts/bin/mw-phpunit.sh"
     - assert-no-mediawiki-errors
    publishers:
     - phpunit-junit-2
     - archive-log-dir
     - castor-save

- builder:
    name: inject-experimental-extension
    builders:
     - shell: |
         # When triggered from the experimental pipeline, add the project to
         # the list of dependencies. Used to inject an extension which is not
         # yet part of the list above.
         if [ "$ZUUL_PIPELINE" == 'experimental' ] && ! grep -q "$ZUUL_PROJECT" deps.txt; then
            echo "$ZUUL_PROJECT" >> deps.txt
            # Evil copy paste of `zuul-cloner` macro
            # FIXME maybe we should always pass $ZUUL_PROJECT in the macro
            zuul-cloner --color --verbose \
                --map /srv/deployment/integration/slave-scripts/etc/zuul-clonemap.yaml \
                --workspace src \
                https://gerrit.wikimedia.org/r/p \
                "$ZUUL_PROJECT"
         fi

- builder:
    name: assert-no-mediawiki-errors
    builders:
        - shell:
            !include-raw:
                - assert-no-mediawiki-errors.bash

- job-template:
    name: 'mediawiki-extensions-{phpflavor}-{image}'
    node: ci-{image}-wikimedia
    concurrent: true
    properties:
     - build-discarder:
         days-to-keep: 15
    triggers:
     - zuul
    builders:
     - castor-load
     - assert-phpflavor:
         phpflavor: '{phpflavor}'
     - hhvm-clear-hhbc
     - prepare-mediawiki-zuul-project
     # When triggered by an extension/skin, run its 'composer test'
     - conditional-step:
         condition-kind: regex-match
         label: '${{ENV,var="ZUUL_PROJECT"}}'
         regex: '^mediawiki/extensions/.+'
         steps:
             - composer-test-mwextension
     - mw-fetch-composer-dev
     - mw-run-phpunit-allexts
    publishers:
     - junit:
        results: 'log/junit*.xml'
     - archive-log-dir
     - castor-save

# See 'mediawiki-phpunit-{phpflavor}'
- job-template:
    name: 'mediawiki-extensions-qunit-jessie'
    node: 'ci-jessie-wikimedia'
    concurrent: true
    properties:
     - build-discarder:
         days-to-keep: 15
    triggers:
     - zuul
    builders:
     - castor-load
     - prepare-mediawiki-zuul-project
     - qunit-karma
     - assert-no-mediawiki-errors
    publishers:
     - castor-save
     - archive-log-dir

- project:
    name: mediawiki-core
    phpflavor:
        - hhvm
        - php55
    jobs:
      - 'mediawiki-core-qunit-selenium-jessie'
      - '{name}-jsduck-docker'
      - '{name}-{phpflavor}lint':
          phpflavor:
              - php55
              - php70
              - hhvm
      - 'mediawiki-phpunit-{phpflavor}-{image}': &phpflavor_images
          phpflavor:
              - php55:
                  image: jessie
              - php70:
                  image: jessie
              # Wikimedia runs HHVM on Jessie
              - hhvm:
                  image: jessie
      - 'mediawiki-phpunit-{phpflavor}-composer-{image}':
          phpflavor:
              - php70:
                  image: jessie
      - 'mediawiki-extensions-{phpflavor}-{image}': *phpflavor_images
      - 'mediawiki-extensions-qunit-jessie'

# Used to decouple MediaWiki related projects from the rest of the projects in
# gate-and-submit. See T107529.
- project:
    name: 'mwgate'
    jobs:
        - '{name}-composer-package-{phpflavor}-docker': &phpflavor_docker
            phpflavor:
                - hhvm:
                    image: docker-registry.wikimedia.org/releng/composer-package-hhvm:0.2.4
                - php55:
                    image: docker-registry.wikimedia.org/releng/composer-package-php55:0.2.4
                - php70:
                    image: docker-registry.wikimedia.org/releng/composer-package:0.1.3
        - '{name}-composer-{phpflavor}-docker':
            phpflavor:
                - hhvm:
                    image: docker-registry.wikimedia.org/releng/composer-test-hhvm:0.2.5
                - php55:
                    image: docker-registry.wikimedia.org/releng/composer-test-php55:0.2.5
                - php70:
                    image: docker-registry.wikimedia.org/releng/composer-test:0.1.5
        - '{name}-composer-validate'
        - '{name}-jsduck-docker'
        - '{name}-{phpflavor}lint':
            phpflavor:
                - php55
                - php56
                - php70
        - '{name}-rake-docker'
        - '{name}-tox-docker'
        - '{name}-npm-node-6-docker'
        - '{name}-npm-browser-node-6-docker'

- job:
    name: 'mediawiki-core-code-coverage'
    node: contintLabsSlave && DebianJessie
    # Set env variables needed by zuul-cloner since job is not triggered by
    # Zuul but is timed using Jenkins own scheduler.
    parameters:
     - string:
         name: 'ZUUL_UUID'
         default: 'mwcore-cover_not-very-random'
     - string:
         name: 'ZUUL_BRANCH'
         default: 'master'
     - string:
         name: 'ZUUL_REF'
         default: 'master'
     - string:
         name: 'ZUUL_CHANGE'
         default: 'timed_build'
     - string:
         name: 'ZUUL_PATCHSET'
         default: 'timed_build'
     - string:
         name: 'ZUUL_PIPELINE'
         default: 'timed_build'
     - string:
         name: 'ZUUL_PROJECT'
         default: 'mediawiki/core'
     - string:
         name: 'ZUUL_URL'
         default: 'https://gerrit.wikimedia.org/r/p'
     - string:
         name: 'PHP_BIN'
         default: 'php7.0'
    builders:
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
     - mw-install-sqlite
     - mw-apply-settings
     - mw-fetch-composer-dev
     # FIXME should use the mw-phpunit.sh wrapper
     - shell: |
        . "/srv/deployment/integration/slave-scripts/bin/mw-set-env.sh"

        mkdir -p log
        rm -f log/clover.xml log/clover.bz2

        # Since clover file are huge, compress them before archiving
        # We need to keep the original though for the cloverphp plugin
        function compress_clover_log() {
            if [ -s "log/clover.xml" ]; then
                echo "Compressing log/clover.xml with bz2..."
                bzip2 --verbose --best --keep log/clover.xml
                echo "Compression completed."
            fi
        }
        trap compress_clover_log EXIT

        rm -fR "$WORKSPACE/cover"
        mkdir -p "$WORKSPACE/cover"

        nice -n 19 \
            php -d zend_extension=xdebug.so \
                $MW_INSTALL_PATH/tests/phpunit/phpunit.php \
                    --exclude-group Dump,Broken,ParserFuzz,Stub \
                    --coverage-clover log/clover.xml \
                    --coverage-html "$WORKSPACE/cover" \
            || :
        # Above: Use "|| :" to ignore any non-zero exist status
        # We want to publish code coverage even in case one of there
        # being PHPUnit test failures. Normal test failures are not
        # fatal and PHPUnit will stil generate console output, clover
        # reports and and html reports. However don't blindly
        # make the job pass either because if we do, then cover-publish
        # will end up syncing an empty directory, which deletes the
        # coverage report from doc.wikimedia.org. In case of "real" failure,
        # let the job fail and don't publish a new report. "real" failures
        # can be a PHP Fatal error, of a segfault, for example.
        test -f cover/index.html

        if [ -s "log/clover.xml" ]; then
            /srv/deployment/integration/slave-scripts/bin/clover-edit.py log/clover.xml --name "MediaWiki core" --remove-full-info --save "$WORKSPACE/cover/clover.xml"
            bzip2 --verbose --best --keep log/clover.xml
            mv log/clover.xml.bz2 "$WORKSPACE/cover/clover.xml.bz2"
        fi

     - cover-publish:
         src: 'cover'
         dest: 'mediawiki-core'
    publishers:
     - archive:
         artifacts: 'log/*'
     - cloverphp:
         xml-location: 'log/clover.xml'
     - mw-teardown
     - beta-irc  # Spam #wikimedia-releng on failure
    triggers:
     - timed: '0 3,15 * * *'
    wrappers:
     - timeout:
         timeout: 120
         fail: true
     - ansicolor
     - timestamps

# Per-patch coverage for MediaWiki core.
- job:
    name: 'mediawiki-phpunit-coverage-patch'
    node: ci-jessie-wikimedia
    builders:
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
     - mw-install-sqlite
     - mw-apply-settings
     - mw-fetch-composer-dev
     - shell: |
        . "/srv/deployment/integration/slave-scripts/bin/mw-set-env.sh"

        cd $MW_INSTALL_PATH
        composer require mediawiki/phpunit-patch-coverage 0.0.9 --no-progress
        # FIXME This is terrible, but composer require creates a dirty diff.
        git checkout composer.json
        ./vendor/bin/phpunit-patch-coverage check --command \
            "php7.0 -d zend_extension=xdebug.so tests/phpunit/phpunit.php" \
            --html coverage.html

    publishers:
     - archive:
         artifacts: 'src/coverage.html'
         allow-empty: true
    triggers:
     - zuul
    wrappers:
     - timeout:
         timeout: 60
         fail: true
     - ansicolor
     - timestamps

# Phan! (T132636)
- job:
    name: 'mediawiki-core-php70-phan-docker'
    node: DebianJessieDocker && m4executor
    concurrent: true
    properties:
     - build-discarder:
         days-to-keep: 15
    triggers:
     - zuul
    builders:
     - docker-log-dir
     - docker-src-dir
     - docker-cache-dir
     - shell: |
        #!/bin/bash -eu
        set -x
        exec docker run \
            --rm \
            --env-file <(/usr/bin/env|egrep -v '^(HOME|SHELL|PATH|LOGNAME|MAIL|HHVM_REPO_CENTRAL_PATH)=') \
            --volume "$(pwd)"/src:/src \
            --volume "$(pwd)"/cache:/cache \
            --volume /srv/git:/srv/git \
            --entrypoint "bash" \
            docker-registry.wikimedia.org/releng/ci-src-setup:0.2.8 \
            /srv/setup-mw.sh
        # nothing else can be executed due to exec
     - shell: |
        exec docker run \
            --rm \
            --volume "$(pwd)"/src:/mediawiki \
            docker-registry.wikimedia.org/releng/mediawiki-phan:0.1.4 \
            -m checkstyle
        # nothing else can be executed due to exec

    publishers:
     - castor-save
     - checkstyle:
        pattern: 'src/tests/phan/issues/latest'
        can-run-on-failed: true
        thresholds:
          failed:
            total-all: 1

- job-template: &job_quibble
    name: quibble-{packages-source}-{database}-{php}-docker
    node: DebianJessieDocker && m4executor
    quibble_args: ''
    concurrent: true
    triggers:
        - zuul
    builders:
        - docker-castor-load
        - docker-log-dir
        - docker-run-with-log-and-workspace-cache:
            image: '{docker_image}'
            docker_run_options: '--volume /srv/git:/srv/git:ro'
            run_args: '--packages-source "{packages-source}" --db "{database}" {quibble_args}'
            logdir: '/log'
    publishers:
        - archive-log-allow-empty
        - castor-save-workspace-cache
    wrappers:
        - timeout:
            timeout: 45  # npm is broken T198348
            fail: true
        - timestamps
        - ansicolor

# For the REL branches
- job-template:
    !!merge : *job_quibble
    name: release-quibble-{packages-source}-{database}-{php}-docker
    triggers:
        - zuul

# For the master and wmf/* branches
- job-template:
    !!merge : *job_quibble
    name: wmf-quibble-vendor-mysql-{php}-docker
    triggers:
        - zuul

- job-template:
    name: mediawiki-quibble-{packages-source}-{database}-{php}-docker
    node: DebianJessieDocker && m4executor
    concurrent: true
    triggers:
        - zuul
    builders:
        - docker-castor-load
        - docker-log-dir
        - docker-run-with-log-and-workspace-cache:
            image: '{docker_image}'
            docker_run_options: '--volume /srv/git:/srv/git:ro'
            run_args: '--packages-source "{packages-source}" --db "{database}" --skip composer-test'
            logdir: '/log'
    publishers:
        - archive-log-allow-empty
        - castor-save-workspace-cache
    wrappers:
        - timeout:
            timeout: 45  # npm is broken T198348
            fail: true
        - timestamps
        - ansicolor

- job-template:
    name: mediawiki-quibble-composertest-{php}-docker
    node: DebianJessieDocker && m4executor
    concurrent: true
    triggers:
        - zuul
    builders:
        - docker-castor-load
        - docker-log-dir
        - docker-run-with-log-and-workspace-cache:
            image: '{docker_image}'
            docker_run_options: '--volume /srv/git:/srv/git:ro'
            run_args: '--packages-source "vendor" --db "mysql" --run composer-test'
            logdir: '/log'
    publishers:
        - archive-log-allow-empty
        - castor-save-workspace-cache
    wrappers:
        - timeout:
            timeout: 45  # npm is broken T198348
            fail: true
        - timestamps
        - ansicolor

- job:
    name: 'quibble-integration'
    project-type: matrix
    execution-strategy:
        sequential: true
    parameters:
        - matrix-combinations:
            name: combo
            description: 'Select matrix combinations'
    axes:
        - axis:
            type: label-expression
            name: label
            values:
                - contint1001
        - axis:
            name: ZUUL_BRANCH
            type: user-defined
            values:
                - master
                - REL1_31
                - REL1_30
                - REL1_29
                - REL1_27
        - axis:
            name: packagessource
            type: user-defined
            values:
                - composer
                - vendor
        - axis:
            name: database
            type: user-defined
            values:
                - mysql
                - sqlite
        - axis:
            name: php
            type: user-defined
            values:
                - php55
                - php70
                - hhvm
    builders:
        - trigger-builds:
            - project: 'quibble-${packagessource}-${database}-${php}-docker'
              block: true
              predefined-parameters: |
                    projectName=quibble-${packagessource}-${database}-${php}-docker
                    ZUUL_URL=https://gerrit.wikimedia.org/r/p
                    ZUUL_PROJECT=mediawiki/core
                    ZUUL_BRANCH=$ZUUL_BRANCH
                    ZUUL_REF=$ZUUL_BRANCH

- project:
    name: quibble-jobs
    packages-source:
        - composer
        - vendor
    database:
        - mysql
        - postgres
        - sqlite
    php:
        - php55:
            docker_image: docker-registry.wikimedia.org/releng/quibble-jessie-php55:0.0.19-1
        - php70:
            docker_image: docker-registry.wikimedia.org/releng/quibble-stretch:0.0.19-1
        - hhvm:
            docker_image: docker-registry.wikimedia.org/releng/quibble-jessie-hhvm:0.0.19
    jobs:
        - quibble-{packages-source}-{database}-{php}-docker
        - mediawiki-quibble-{packages-source}-{database}-{php}-docker
        - mediawiki-quibble-composertest-{php}-docker
        - release-quibble-{packages-source}-{database}-{php}-docker
        - wmf-quibble-vendor-mysql-{php}-docker:
            # We never use composer on wmf cluster
            packages-source: vendor
            # WMF cluster uses MariaDB/MySQL
            database: mysql
