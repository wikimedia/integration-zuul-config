# This file holds the configuration for all MediaWiki core related jobs.

# Note that mediawiki/core branches may have a lot of submodules, we thus
# use a specific git macro to prevents Jenkins from updating all the
# submodules we do not care about. See bug 42455.

- job-template:
    name: 'mediawiki-core-npm-node-4.3'
    node: ci-jessie-wikimedia
    concurrent: true
    properties:
     - zeromq-event
    triggers:
     - zuul
    builders:
     - castor-load
     - shell: |
         zuul-cloner --version
         zuul-cloner --color \
           --verbose \
           --workspace src \
           --map /srv/deployment/integration/slave-scripts/etc/zuul-clonemap.yaml \
           --cache-dir /srv/git \
           https://gerrit.wikimedia.org/r/p \
           mediawiki/core
     - shell: |
         node --version
         npm --version
         cd src/
         npm install
         npm test
    publishers:
     - castor-save


- job-template:
    name: 'mediawiki-core-qunit'
    node: contintLabsSlave && UbuntuTrusty
    concurrent: true
    logrotate:
        daysToKeep: 15
    properties:
     - throttle-one-per-node
    triggers:
     - zuul
    builders:
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
     - mw-install-mysql
     - mw-apply-settings
     - qunit-karma
    publishers:
     - localhost-cleanup
     - mw-teardown-mysql
     - archive-log-dir

- job-template:
    name: 'mediawiki-core-jsduck'
    node: contintLabsSlave && UbuntuTrusty
    defaults: use-remote-zuul-no-submodules
    concurrent: true
    logrotate:
        daysToKeep: 15
    triggers:
     - zuul
    builders:
     - jsduck

- job:
    name: 'mediawiki-core-jsduck-publish'
    node: contintLabsSlave && UbuntuTrusty
    defaults: use-remote-zuul-no-submodules
    concurrent: false
    logrotate:
        daysToKeep: 15
    triggers:
     - zuul
    builders:
     - assert-env-doc_subpath
     - npm-install
     - npm-run-doc
     - doc-publish:
        docsrc: 'docs/js'
        docdest: 'mediawiki-core/$DOC_SUBPATH/js'
    publishers:
     - global-teardown

- job:
    name: 'mediawiki-core-doxygen-publish'
    node: contintLabsSlave && UbuntuTrusty
    concurrent: false
    triggers:
     - zuul
    builders:
     - mw-setup
     - assert-env-doc_subpath
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
     - shell: |
         rm -rf build/doc
         TARGET_BASEDIR="$WORKSPACE/build/doc" /srv/deployment/integration/slave-scripts/tools/mwcore-docgen.sh
     - doc-publish:
         docsrc: 'build/doc/html'
         docdest: 'mediawiki-core/$DOC_SUBPATH/php'
    publishers:
     - mw-teardown

# Runs all MediaWiki tests under hhvm
- job-template:
    name: 'mediawiki-phpunit-hhvm'
    node: 'contintLabsSlave && UbuntuTrusty && phpflavor-hhvm'
    concurrent: true
    properties:
     - throttle-one-per-node
    triggers:
     - zuul
    builders:
     - assert-phpflavor:
         phpflavor: 'hhvm'
     - hhvm-clear-hhbc
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
     - mw-install-mysql
     - mw-apply-settings
     - mw-fetch-composer-dev
     - shell: "/srv/deployment/integration/slave-scripts/bin/mw-phpunit.sh"
    publishers:
     - phpunit-junit-2
     - mw-teardown-mysql
     - archive-log-dir

# Runs subset of MediaWiki tests
#
# Excludes '@group ParserTests' tests which are run in parallel via
# mediawiki-phpunit-parsertests-{phpflavor}
- job-template:
    name: 'mediawiki-phpunit-{phpflavor}'
    node: 'contintLabsSlave && phpflavor-{phpflavor}'
    concurrent: true
    properties:
     - throttle-one-per-node
    triggers:
     - zuul
    builders:
     - assert-phpflavor:
         phpflavor: '{phpflavor}'
     - hhvm-clear-hhbc
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
     - mw-install-mysql
     - mw-apply-settings
     - mw-fetch-composer-dev
     # ParserTests tests are run via 'mediawiki-phpunit-parsertests-phpflavor'
     - shell: "PHPUNIT_EXCLUDE_GROUP=ParserTests /srv/deployment/integration/slave-scripts/bin/mw-phpunit.sh"
    publishers:
     - phpunit-junit-2
     - mw-teardown-mysql
     - archive-log-dir

# mediawiki-phpunit-parsertests-{phpflavor}
#
# Only runs the 'parsertests' MediaWiki testsuite.
# Complements 'mediawiki-phpunit-{phpflavor}'.
- job-template:
    name: 'mediawiki-phpunit-parsertests-{phpflavor}'
    node: 'contintLabsSlave && phpflavor-{phpflavor}'
    concurrent: true
    properties:
     - throttle-one-per-node
    triggers:
     - zuul
    builders:
     - assert-phpflavor:
         phpflavor: '{phpflavor}'
     - hhvm-clear-hhbc
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
     - mw-install-mysql
     - mw-apply-settings
     - mw-fetch-composer-dev
     - shell: "PHPUNIT_TESTSUITE=parsertests /srv/deployment/integration/slave-scripts/bin/mw-phpunit.sh"
    publishers:
     - phpunit-junit-2
     - mw-teardown-mysql
     - archive-log-dir

# Same as mediawiki-phpunit-{phpflavor}, except uses composer instead of mediawiki/vendor.
# Currently experimental, will eventually be used for `master`, and
# wmf/ branches will use mediawiki/vendor. See T90303.
- job-template:
    name: 'mediawiki-phpunit-{phpflavor}-composer'
    node: 'contintLabsSlave && phpflavor-{phpflavor}'
    concurrent: true
    properties:
     - throttle-one-per-node
    triggers:
     - zuul
    builders:
     - assert-phpflavor:
         phpflavor: '{phpflavor}'
     - hhvm-clear-hhbc
     - zuul-cloner:
         projects: >
             mediawiki/core
     - composer-validate:
         dir: 'src'
     - composer-update:
         dir: 'src'
     - mw-install-mysql
     - mw-apply-settings
     - shell: "/srv/deployment/integration/slave-scripts/bin/mw-phpunit.sh"
    publishers:
     - phpunit-junit-2
     - mw-teardown-mysql
     - archive-log-dir

- builder:
    name: inject-experimental-extension
    builders:
     - shell: |
         # When triggered from the experimental pipeline, add the project to
         # the list of dependencies. Used to inject an extension which is not
         # yet part of the list above.
         if [ "$ZUUL_PIPELINE" == 'experimental' ] && ! grep -q "$ZUUL_PROJECT" deps.txt; then
            echo "$ZUUL_PROJECT" >> deps.txt
            # Evil copy paste of `zuul-cloner` macro
            # FIXME maybe we should always pass $ZUUL_PROJECT in the macro
            zuul-cloner --color --verbose \
                --map /srv/deployment/integration/slave-scripts/etc/zuul-clonemap.yaml \
                --workspace src \
                https://gerrit.wikimedia.org/r/p \
                "$ZUUL_PROJECT"
         fi

- builder:
    name: sort-deps-txt
    builders:
     - shell: |
         # Ensure consistent loading
         sort -o deps.txt deps.txt

- job-template:
    name: 'mediawiki-extensions-{phpflavor}'
    # Select runnable node based on the phpflavor (hhvm or php53)
    #
    # We want to reuse the same job template for both PHP flavor:
    # - HHVM flavor runs on Trusty CI labs slaves with HHVM
    # - PHP53 flavor runs on Precise CI labs slaves with Zend PHP 5.3
    # - PHP55 flavor runs on Trusty CI labs slaves with Zend PHP 5.5
    #
    # Doing a '&& phpflavor-{phpflavor}' is the trick to vary the label
    # definition based on the job name.
    #
    # If you want to verify the slaves, head to the job configuration page,
    # search for 'Restrict where this project can be run', below the input box
    # is a text: Slaves in [label]: X . Clicking [label] will list nodes
    # matching the expression.
    node: 'contintLabsSlave && phpflavor-{phpflavor}'
    concurrent: true
    logrotate:
        daysToKeep: 15

    properties:
     - throttle-one-per-node
    triggers:
     - zuul
    builders:
     - assert-phpflavor:
         phpflavor: '{phpflavor}'
     - hhvm-clear-hhbc
     - zuul-cloner-extdeps:
         ext-name: ''
         dependencies: '{dependencies}'
         additional-repositories: 'mediawiki/vendor'
     - inject-experimental-extension
     - sort-deps-txt
     - mw-install-mysql
     - shell: "cp deps.txt src/extensions_load.txt"
     - mw-apply-settings
     - mw-run-update-script
     - mw-fetch-composer-dev
     - mw-run-phpunit-allexts
    publishers:
     - junit:
        results: 'log/junit*.xml'
     - mw-teardown-mysql
     - archive-log-dir

# See 'mediawiki-phpunit-{phpflavor}'
- job-template:
    name: 'mediawiki-extensions-qunit'
    node: contintLabsSlave && UbuntuTrusty
    concurrent: true
    logrotate:
        daysToKeep: 15

    properties:
     - throttle-one-per-node
    triggers:
     - zuul
    builders:
     - zuul-cloner-extdeps:
         ext-name: ''
         dependencies: '{dependencies}'
         additional-repositories: 'mediawiki/vendor'
     - inject-experimental-extension
     - sort-deps-txt
     - mw-install-mysql
     - shell: "cp deps.txt src/extensions_load.txt"
     - mw-apply-settings
     - mw-run-update-script
     - qunit-karma
    publishers:
     - localhost-cleanup
     - mw-teardown-mysql
     - archive-log-dir

# Test out our PHPUnit against various MediaWiki branches
#
# Essentially a copy paste of mediawiki-phpunit-{phpflavor}
# FIXME: support HHVM
- job-template:
    name: 'integration-phpunit-mediawiki-{mwbranch}'
    node: contintLabsSlave && UbuntuPrecise  # Zend PHP 5.3.x
    concurrent: true
    triggers:
     - zuul
    builders:
     - zuul-cloner:
         projects: >
             --branch {mwbranch}
             mediawiki/core
             mediawiki/vendor
             integration/phpunit
     - mw-install-mysql
     - mw-apply-settings
     - mw-fetch-composer-dev
     - shell: |
         export PHPUNIT_DIR="$WORKSPACE/src/integration/phpunit/vendor/phpunit/phpunit"
         /srv/deployment/integration/slave-scripts/bin/mw-phpunit.sh
    publishers:
     - phpunit-junit-2
     - mw-teardown-mysql
     - archive-log-dir

- project:
    name: mediawiki-core
    phpflavor:
        - hhvm
        - php53
        - php55
    jobs:
      - 'mediawiki-core-qunit'
      - 'mediawiki-core-jsduck'
      - 'mediawiki-core-npm-node-4.3'
      - 'mediawiki-core-jsduck-publish'
      - 'mediawiki-core-doxygen-publish'
      - '{name}-php53lint'
      - '{name}-php55lint'
      - 'mediawiki-phpunit-{phpflavor}'
      - 'mediawiki-phpunit-parsertests-{phpflavor}'
      - 'mediawiki-phpunit-{phpflavor}-composer'
      - 'mediawiki-extensions-{phpflavor}':
          dependencies: &gatedextensions >
              AbuseFilter
              Babel
              Cards
              CheckUser
              CirrusSearch
              Cite
              cldr
              ConfirmEdit
              Echo
              Elastica
              EventLogging
              Flow
              Gather
              GeoData
              GlobalCssJs
              GuidedTour
              JsonConfig
              MobileApp
              MobileFrontend
              MwEmbedSupport
              ParserFunctions
              PdfHandler
              SandboxLink
              SpamBlacklist
              Thanks
              TimedMediaHandler
              UniversalLanguageSelector
              VisualEditor
              Wikidata
              ZeroBanner
              ZeroPortal
      - 'mediawiki-extensions-qunit':
          dependencies: *gatedextensions

- job:
    name: 'mediawiki-core-code-coverage'
    node: contintLabsSlave && UbuntuTrusty
    # Set env variables needed by zuul-cloner since job is not triggered by
    # Zuul but is timed using Jenkins own scheduler.
    parameters:
     - string:
         name: 'ZUUL_UUID'
         default: 'mwcore-cover_not-very-random'
     - string:
         name: 'ZUUL_BRANCH'
         default: 'master'
     - string:
         name: 'ZUUL_REF'
         default: 'master'
     - string:
         name: 'ZUUL_CHANGE'
         default: 'timed_build'
     - string:
         name: 'ZUUL_PATCHSET'
         default: 'timed_build'
     - string:
         name: 'ZUUL_PIPELINE'
         default: 'timed_build'
     - string:
         name: 'ZUUL_PROJECT'
         default: 'mediawiki/core'
     - string:
         name: 'ZUUL_URL'
         default: 'https://gerrit.wikimedia.org/r/p'
    builders:
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
     - mw-install-sqlite
     - mw-apply-settings
     - mw-fetch-composer-dev
     # FIXME should use the mw-phpunit.sh wrapper
     - shell: |
        . "/srv/deployment/integration/slave-scripts/bin/mw-set-env.sh"

        mkdir -p log
        rm -f log/clover.xml log/clover.bz2

        # Since clover file are huge, compress them before archiving
        # We need to keep the original though for the cloverphp plugin
        function compress_clover_log() {
            if [ -s "log/clover.xml" ]; then
                echo "Compressing log/clover.xml with bz2..."
                bzip2 --verbose --best --keep log/clover.xml
                echo "Compression completed."
            fi
        }
        trap compress_clover_log EXIT

        rm -fR "$WORKSPACE/cover"
        mkdir -p "$WORKSPACE/cover"

        nice -n 19 php $MW_INSTALL_PATH/tests/phpunit/phpunit.php \
            --exclude-group Dump,Broken,ParserFuzz,Stub \
            --coverage-clover log/clover.xml \
            --coverage-html "$WORKSPACE/cover" \
            || :

        # PHP segfault (bug 43972) so ignore any error with '|| :' or the
        # Jenkins plugin will never generate the coverage report for us
        # https://issues.jenkins-ci.org/browse/JENKINS-21046
     - cover-publish:
         src: 'cover'
         dest: 'mediawiki-core/$ZUUL_BRANCH/php'
    publishers:
     - archive:
         artifacts: 'log/clover.xml.bz2'
     - cloverphp:
         xml-location: 'log/clover.xml'
     - mw-teardown
    triggers:
     - timed: '0 3,15 * * *'
    wrappers:
     - ansicolor
     - timestamps

# Special job to run MW-CS against MediaWiki core.
# Can't run it through composer because it'll timeout.
- job:
    name: 'mediawiki-core-phpcs'
    node: contintLabsSlave && UbuntuTrusty
    concurrent: true
    triggers:
     - zuul
    builders:
     - zuul-cloner:
         projects: >
             mediawiki/core
     - composer-update:
        dir: '$WORKSPACE/src'
     - shell: |
        cd $WORKSPACE/src
        vendor/bin/phpcs -p -s
