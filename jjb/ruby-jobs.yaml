# Executes a Gem command via Bundler, allowing for some additional options
#
# - initialization: Shell script to source before doing anything
# - bundler-version: Version of Bundler to install/use. Defaults to the latest.
# - dir: Working directory for Bundler execution
# - command: Gem/Bundler command to run
#
- builder:
    name: bundle-with-options
    builders:
     - shell: |
         # Change to the given working directory
         cd "{dir}"

         # Source any given initialization script
         if [ ! -z '{initialization}' ]; then
           . '{initialization}'
         fi

         # Shared cache of gems to avoid hitting rubygems all the time
         # See https://github.com/bundler/bundler/issues/2856
         export GEM_HOME="$HOME/.gem/2.0.0"

         # Install bundler
         if [ '{bundler-version}' != '' ]; then
           version=(-v '{bundler-version}')
         else
           version=()
         fi

         mkdir -p vendor
         gem2.0 install --env-shebang -i vendor --no-document "${{version[@]}}" bundler

         # Prepare some paths lookup
         export GEM_PATH="`pwd`/vendor"

         # Install dependencies
         vendor/bin/bundle install --verbose
         vendor/bin/bundle exec {command}

- builder:
    name: bundle-nodepool
    builders:
     - shell: |
         # We clean up unused gems that might be injected by castor
         # Installs under BUNDLE_PATH injected by Zuul
         bundle install --clean
         bundle exec {command}

# Run `bundle exec rake test` on Nodepool Jessie instances.
- job: &job_rake-jessie
    name: 'rake-jessie'
    node: ci-jessie-wikimedia
    defaults: use-remote-zuul-shallow-clone
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - bundle-nodepool:
         command: rake test
    publishers:
     - castor-save

- job-template:
    !!merge : *job_rake-jessie
    name: '{name}-rake-jessie'
    # Reinject Zuul parameters since JJB strip for some reason
    triggers:
     - zuul

- project:
    name: common-rake-job
    jobs:
     - rake-jessie

# Call bundle 'yard' to generate documentation in labs and publish to
# doc.wikimedia.org using an intermediate rsync repository in labs.
- job-template:
    name: '{name}-bundle-yard-publish'
    node: ci-jessie-wikimedia
    defaults: use-remoteonly-zuul
    triggers:
     - zuul
    builders:
     - castor-load
     - bundle-nodepool:
         command: 'yard'
     - doc-publish:
         docsrc: 'doc'
         docdest: 'rubygems/{name}'
    publishers:
     - castor-save

# General MW-Selenium job used to dogfood the builder against MW core.
- job:
    name: 'mediawiki-selenium-integration-jessie'
    node: ci-jessie-wikimedia
    concurrent: true
    triggers:
     - zuul
    builders:
     - castor-load
     - zuul-cloner:
         projects: >
             mediawiki/core
             mediawiki/vendor
             mediawiki/selenium
     - mw-install-mysql
     - mw-apply-settings
     - mw-selenium-nodepool:
         tests-dir: 'src/mediawiki/selenium'
    publishers:
     - castor-save
     - archive-log-dir
