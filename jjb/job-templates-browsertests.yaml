# default

- job-template:
    name: 'browsertests-{name}-{mediawiki_url}-{platform}-{browser}'
    defaults: browsertests

- job-template:
    name: 'browsertests-{name}-{mediawiki_url}-{platform}-{browser}-sauce'
    defaults: browsertests

- job-template:
    name: 'browsertests-{name}-{mediawiki_url}-{platform}-{browser}-monobook-sauce'
    defaults: browsertests

- job-template:
    name: 'browsertests-{name}-{mediawiki_url}-{platform}-{browser}-{version}-sauce'
    defaults: browsertests

- job-template:
    name: 'browsertests-{name}-language-screenshot-{platform}-{browser}'
    defaults: browsertests
    project-type: matrix
    parameters:
     - string:
        name: MEDIAWIKI_API_UPLOAD_URL
        default: https://commons.wikimedia.org/w/api.php
        description: "Upload API URL for uploading screenshots"
     - string:
        name: lang_list
        default: "ar ast cs de el en es et fa fi fr gl he hi hr id ilo it ja kn ko krc lb mk ms nb nl om pl pt ro ru sl sr sv tr uk vi yue zh-hans zh-hant"
        description: "Languages (space separated)"
    execution-strategy:
      sequential: true
    axes:
     - axis:
        type: label-expression
        name: label
        values:
         - contintLabsSlave && UbuntuTrusty
     - axis:
        type: dynamic
        name: LANGUAGE_SCREENSHOT_CODE
        values:
         - lang_list

    triggers:
      - timed: "@yearly" # This job should be executed only manually. Setting it to trigger yearly is a workaround.

- job-template:
    name: 'browsertests-MobileFrontend-{name}-{platform}-{browser}-sauce'
    defaults: browsertests

    triggers:
          - timed: "H 14 * * *"

- job-template:
    name: 'browsertests-Wikidata-{name}-{platform}-{browser}-sauce'
    defaults: browsertests

    triggers:
          - timed: "H 14 * * *"

- defaults:
    name: browsertests
    node: contintLabsSlave && UbuntuTrusty
    browser_timeout: ''
    browsertest_job_timeout: 180
    repository_host: 'gerrit.wikimedia.org/r'
    cucumber_tags: ''
    version: ''

    logrotate:
        daysToKeep: 31  # ~ 2 * 2 weeks sprints

    scm:
      - git:
          url: https://{repository_host}/{repository}
          branches:
            - master
          wipe-workspace: false  # keep the workspace...
          clean: true            # ... and use git clean instead
          prune: true            # prune remote obsoletes branches
          recursive-submodules: true

    triggers:
      - timed: "@daily"

    builders:
      - shell: mkdir -p "$WORKSPACE/log/junit"
      - browsertest-website:
          browser: '{browser}'
          browser_timeout: '{browser_timeout}'
          cucumber_tags: '{cucumber_tags}'
          headless: '{headless}'
          folder: '{folder}'
          mediawiki_credentials_id: '{mediawiki_credentials_id}'
          mediawiki_url: '{mediawiki_url}'
          platform: '{platform}'
          version: '{version}'

    publishers:
      - junit:
          results: 'log/junit/*.xml'

      - email-ext:
          recipients: '{recipients}'
          body: '${{SCRIPT, template="wikimedia.template"}}'

      - browsertests-irc

      - claim-build

      - performance:
          failed-threshold: -1
          unstable-threshold: -1
          report:
           - junit: log/junit/*.xml

      - archive:
          artifacts: 'log/*.log, log/junit/*.xml, log/report.html, log/*.png'

    wrappers:
      - ansicolor
      - timeout:
          timeout: '{browsertest_job_timeout}'
      - timestamps
      # Wiki usernames and passwords are hold in Jenkins credentials store
      # https://integration.wikimedia.org/ci/credential-store/domain/browsertests/
      - credentials-binding:
          - username-password:
              credential-id: '{mediawiki_credentials_id}'
              # FIXME JJB does not support splitted user/pass variables although the plugin does.
              # http://ci.openstack.org/jenkins-job-builder/wrappers.html#wrappers.credentials-binding
              # Pass both in a single variable, separated by ':'
              variable: MEDIAWIKI_CREDENTIALS

# UploadWizard

- job-template:
    name: 'UploadWizard-api-{mediawiki_url}'
    defaults: browsertests
    node: contintLabsSlave && UbuntuPrecise
    mediawiki_credentials_id: '{mediawiki_credentials_id}'
    mediawiki_url: '{mediawiki_url}'
    pollscm: '{pollscm}'

    triggers:
      - timed: "H */6 * * *"
      - pollscm: "{pollscm}"

    builders:
      - UploadWizard-api:
          mediawiki_credentials_id: '{mediawiki_credentials_id}'
          mediawiki_url: '{mediawiki_url}'

    publishers:
      - email:
          recipients: multimedia-alerts@lists.wikimedia.org
      - browsertests-irc

- builder:
    name: UploadWizard-api
    builders:
      - shell: |
          # set up environment variables
          set -e

          set +x
          if [ -z $MEDIAWIKI_CREDENTIALS ]; then
              echo "\$MEDIAWIKI_CREDENTIALS is empty. Check job configuration."
              exit 1
          fi
          export MEDIAWIKI_USER=`echo $MEDIAWIKI_CREDENTIALS | cut -f1 -d:`
          export MEDIAWIKI_PASSWORD=`echo $MEDIAWIKI_CREDENTIALS | cut -f2- -d:`
          set -x

          # install python
          virtualenv --distribute DEV

          # install python dependencies
          DEV/bin/pip install -rtests/api/requirements.txt

          # run tests
          DEV/bin/python tests/api/upload-wizard_tests.py \
            --username "$MEDIAWIKI_USER" \
            --api_url "http://{mediawiki_url}/w/api.php"
          DEV/bin/python tests/api/upload-wizard_tests.py \
            --gen_new_image \
            --username "$MEDIAWIKI_USER" \
            --api_url "http://{mediawiki_url}/w/api.php"

# VisualEditor

- job-template:
    name: 'browsertests-{name}-production-{platform}-{browser}-sauce'
    defaults: browsertests

    triggers:
      - timed: "@weekly"

    builders:
      - shell: mkdir -p "$WORKSPACE/log/junit"
      - browsertest-website:
          browser: '{browser}'
          browser_timeout: '{browser_timeout}'
          cucumber_tags: '{cucumber_tags}'
          headless: '{headless}'
          folder: '{folder}'
          mediawiki_credentials_id: '{mediawiki_credentials_id}'
          mediawiki_url: '{mediawiki_url}'
          platform: '{platform}'
          version: '{version}'
