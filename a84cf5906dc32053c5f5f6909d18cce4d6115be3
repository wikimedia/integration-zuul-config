{
  "comments": [
    {
      "key": {
        "uuid": "0efd9372_f2b93979",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "I am not sure why it would be needed, we have jobs without any triggers such as tox-jessie and this raw xml seems to generate:\n\n +  \u003ctriggers class\u003d\"vector\"\u003e\n +    \u003ctriggers/\u003e\n +  \u003c/triggers\u003e\n\nIf there is a specific need for it, add a comment explain it.",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_9ae2839a",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "So just leave out the triggers entirely?",
      "parentUuid": "0efd9372_f2b93979",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_5de2d52e",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T18:49:36Z",
      "side": 1,
      "message": "Yes you can remove it entirely.  JJB will just create an empty \u003ctriggers/\u003e :)",
      "parentUuid": "0efd9372_9ae2839a",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_d26b55ec",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "The Nodepool instances are used only once, hence there is no need to wipe-workspace.",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_7add1fe1",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0efd9372_d26b55ec",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_f24f7995",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "Note that archive-log-dir will fail the build if /log/ is empty and most probably fail as well whenever it is non empty.   Maybe that is not an issue though",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_daeb6b75",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "so just leave this out?",
      "parentUuid": "0efd9372_f24f7995",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_3ddd5174",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T18:49:36Z",
      "side": 1,
      "message": "Given the prebuild step will always create the /log/ dir it should be fine.   We can always adjust later on as needed.",
      "parentUuid": "0efd9372_daeb6b75",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_5225a5bb",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "rm -f will silently ignore a file not existing so you can simply:\n\n rm -f log/stdout.log log/phab_comment.log\n\nAgain on Nodepool instances the workspace is initially empty and the log dir does not exist. So I would just drop the rm commands.",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_baee6784",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0efd9372_5225a5bb",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_922f0d9c",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 65,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "mkdir -p does not yield any error if target already exists, the ||Â true can be removed.",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_1ae693ac",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 65,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0efd9372_922f0d9c",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_141e6a63",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": ".phab_comment.log is created by the rebuild step and this block is thus always executed.\n\nI would drop that step and instead have the prebuild one to:\n\n COMMENT\u003d\"...\"\n mkdir -p log\n echo \"$COMMENT\" \u003e log/.phabricator_comment\n\nThen have all the build steps to append directly to log/.phabricator_comment and then you can drop that postbuild step.\n\n\nAdditionaly, the builder has no guarantee to be run, for example if the job is aborted due to a timeout.  To make sure a script runs we use the postbuild publisher:\n\n - publisher:\n     name: run-after-build\n     publishers:\n      - postbuildscript:\n          builders:\n           - shell: \"echo foo\"\n          # Postbuild options are confusing, setting both to false ensures the script always runs.\n          onsuccess: False\n          onfailure: False",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_fae8ef78",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0efd9372_141e6a63",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_94489a61",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 93,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "Nitpick: ideally we should exit with the original exit code.",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_5aff7b31",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 93,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0efd9372_94489a61",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_94beda11",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 121,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "composer install install from the composer.lock but we have switched everything to just update (forgot all the details).\n\nSeems our default macro is:\n\n  composer update --ansi --no-progress --prefer-dist --profile -v\n\n\ncomposer test should be aligned with the existing composer-test macro:\n\n COMPOSER_PROCESS_TIMEOUT\u003d600 composer --ansi test\n\nWhile at it we could display the composer version:  composer --version",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_3afa7740",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 121,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "Can I reuse a macro instead of duplicating code here?",
      "parentUuid": "0efd9372_94beda11",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_1dd04d54",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 121,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T18:49:36Z",
      "side": 1,
      "message": "Not sure it can be done easily. The other macros tends to be several line longs and the phabricator-builder inject it in:\n\n {command} | tee \"log/stdlout.log\"\n\nMaybe we can hack it with something like  $({command}) | tee \"log/stdlout.log\" but that becomes complicated.\n\nGiven all those commands are straightforward and havent been tweaked/changed in a long time, I guess we can afford some code duplication.  It is simpler than trying to figure out a nicely engineered solution.",
      "parentUuid": "0efd9372_3afa7740",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_b48afe6b",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "Prepend it with:\n\n node --version\n npm --version\n\nUseful for devs / debugging.",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_9af9e34c",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "is there a reusable macro? if not should I make one?",
      "parentUuid": "0efd9372_b48afe6b",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_74909698",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 139,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "rake -T list documented tasks but does not execute any. We also need to install the dependencies:\n\n bundle install --clean --verbose\n bundle exec rake test\n\nThat should do it",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_7af4ff50",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 139,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "is there a reusable macro? if not should I make one?",
      "parentUuid": "0efd9372_74909698",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_94ec1a22",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "For large repositories (namely mediawiki/core) the Nodepool instances have bare git repositories under /srv/git  but they are named after the Gerrit project name so that is not going to be of any help here.\n\nGuess we will come to it later :-}",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_54c912ad",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 173,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "Isn\u0027t the Phabricator plugin already taking care of cloning and checking out?",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_1a9df30e",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 173,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "no",
      "parentUuid": "0efd9372_54c912ad",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_5448f231",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 202,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T13:26:16Z",
      "side": 1,
      "message": "That is creative ;-}   We will want to upstream that to Jenkins Job Builder ;-)",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_3ad397d8",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 202,
      "author": {
        "id": 1706
      },
      "writtenOn": "2016-06-23T17:52:00Z",
      "side": 1,
      "message": "They don\u0027t want to support the wrapper, see\nhttps://github.com/uber/phabricator-jenkins-plugin/issues/81\n\n\"Upstream strongly recommends against the arc patch based approach (the better approaches did not exist when this plugin was first written). I\u0027m not sure it makes sense to encourage arc patch via the wrapper\"\n\nUnfortunately the arc patch approach is the only one I can get working consistently because the staging repo doesn\u0027t yet work reliably with our current setup. So jjb won\u0027t be supporting this and the raw xml is a temporary workaround until we have reliable change handoff via staging URLs.",
      "parentUuid": "0efd9372_5448f231",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0efd9372_dd3405aa",
        "filename": "jjb/phabricator.yaml",
        "patchSetId": 7
      },
      "lineNbr": 202,
      "author": {
        "id": 24
      },
      "writtenOn": "2016-06-23T18:49:36Z",
      "side": 1,
      "message": "That sounds fair and let us at least get something to work / migrate to.  Can you please fill in a task about fixing the staging and blocking another task to get rid of this wrapper?  Simply so we dont forget :)\n\nThx for the clarification. Part is good as it is.",
      "parentUuid": "0efd9372_3ad397d8",
      "revId": "a84cf5906dc32053c5f5f6909d18cce4d6115be3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}