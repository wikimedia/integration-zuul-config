#!/bin/bash
# vim: set et ts=4 sw=4:
#
# Populate git repositories on the building host
#

if [ ${DIB_DEBUG_TRACE:-0} -gt 0 ]; then
    set -x
fi
set -eu
set -o pipefail

[ -n "$TARGET_ROOT" ]

# Git cache on the host
DIB_GIT_CACHE=$DIB_IMAGE_CACHE/git-repos

# Target directory in the image
DIB_GIT_BARE_MIRRORS=${DIB_GIT_BARE_MIRRORS:-/srv/git}

# Repositories to clone
REPOS=('operations/puppet.git' 'integration/config.git')

for REPO in ${REPOS[@]}; do
    # XXX handle DIB_OFFLINE to skip interactions with Gerrit
    if [ ! -e "$DIB_GIT_CACHE/$REPO" ]; then
        echo "Creating host cache $DIB_GIT_CACHE/$REPO"
        mkdir -v -p $(dirname "$DIB_GIT_CACHE/$REPO")
        git clone --bare "https://gerrit.wikimedia.org/r/p/$REPO" "$DIB_GIT_CACHE/$REPO"
    else
        echo "Refreshing host cache $DIB_GIT_CACHE/$REPO"
        pushd "$DIB_GIT_CACHE/$REPO"
        git remote set-url origin "https://gerrit.wikimedia.org/r/p/$REPO"
        git fetch --prune --update-head-ok \
            origin +refs/heads/*:refs/heads/* +refs/tags/*:refs/tags/*
        echo "House cleaning (repack && gc)"
        git repack -A -d
        git gc --prune=all
        git log -n 1 --format='HEAD is at:%n%h %ci (%cr)%n>> %s' HEAD
        popd
    fi
done;

echo "Copying cached repos from host to image"
sudo mkdir -p $TARGET_ROOT/$DIB_GIT_BARE_MIRRORS
sudo cp -a $DIB_GIT_CACHE/. $TARGET_ROOT/$DIB_GIT_BARE_MIRRORS
